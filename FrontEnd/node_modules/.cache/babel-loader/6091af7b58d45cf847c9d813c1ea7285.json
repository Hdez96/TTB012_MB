{"ast":null,"code":"var _jsxFileName = \"/home/ubuntu/TTB012_MB/FrontEnd/src/componentes/paginas/formatos/estatuspatiosalida.jsx\";\nimport React, { useRef, useState, useEffect } from 'react';\nimport ReactDOM from \"react-dom\";\nimport { withStyles, makeStyles } from '@material-ui/core/styles';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\nimport Button from '@material-ui/core/Button';\nimport { green, purple } from '@material-ui/core/colors';\nimport { Grid, Box } from '@material-ui/core/';\nimport { List, ListItem, ListItemIcon, ListItemText } from '@material-ui/core';\nimport { withRouter } from 'react-router-dom';\nimport { useHistory } from \"react-router-dom\";\nimport swal from \"sweetalert\";\nimport MenuItem from '@material-ui/core/MenuItem';\nimport { Input, TextField, Container, Typography } from '@material-ui/core';\nimport Select from '@material-ui/core/Select';\nimport { getData, Liberar } from '../../Functions/EstatusPatio';\nimport KeyboardReturn from \"@material-ui/icons/KeyboardReturn\";\nimport CheckCircleOutline from \"@material-ui/icons/CheckCircleOutline\";\n\nconst EstatusPatio = () => {\n  const ColorButton = withStyles(theme => ({\n    root: {\n      color: theme.palette.getContrastText(green[500]),\n      backgroundColor: green[500],\n      '&:hover': {\n        backgroundColor: green[700]\n      }\n    }\n  }))(Button);\n  const StyledTableCell = withStyles(theme => ({\n    head: {\n      backgroundColor: theme.palette.error.light,\n      color: theme.palette.common.white,\n      size: 'small'\n    },\n    body: {\n      fontSize: 14\n    }\n  }))(TableCell);\n  const StyledTableRow = withStyles(theme => ({\n    root: {\n      '&:nth-of-type(odd)': {}\n    }\n  }))(TableRow);\n  const useStyles = makeStyles(theme => ({\n    paper: {\n      marginTop: theme.spacing(8),\n      display: 'flex',\n      flexDirection: 'column'\n    },\n    table: {\n      minWidth: \"100%\"\n    },\n    form: {\n      width: '100%',\n      // Fix IE 11 issue.\n      marginTop: theme.spacing(3),\n      marginRight: theme.spacing(2)\n    },\n    submit: {\n      margin: theme.spacing(3, 0, 2),\n      backgroundColor: theme.palette.error.dark\n    }\n  }));\n\n  function createData(name) {\n    return {\n      name\n    };\n  }\n\n  const classes = useStyles();\n  const history = useHistory();\n\n  function getCurrentDate(separator = '') {\n    let newDate = new Date();\n    let date = newDate.getDate();\n    let month = newDate.getMonth() + 1;\n    let year = newDate.getFullYear();\n    return `${year}${separator = \"-\"}${month < 10 ? `0${month}` : `${month}`}${separator = \"-\"}${date}`;\n  }\n\n  const fecha = getCurrentDate();\n  const FechaRef = useRef([]);\n  const [data, setData] = useState([]);\n  useEffect(() => {\n    getAuto();\n  }, []);\n\n  const getAuto = async () => {\n    const url = 'estatusP/get_liberacion';\n\n    const _data = await getData(url);\n\n    if (_data.success) {\n      console.log(\"HOLIS\");\n      setData(_data.data);\n      console.log(data); //setPreload(false)\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(Container, {\n    component: \"main\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    component: \"h1\",\n    variant: \"h5\",\n    align: \"left\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 5\n    }\n  }, \"Liberaci\\xF3n de Estatus Patio\"), /*#__PURE__*/React.createElement(Typography, {\n    component: \"h1\",\n    variant: \"h5\",\n    align: \"left\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 5\n    }\n  }, fecha), /*#__PURE__*/React.createElement(TableContainer, {\n    component: Paper,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 5\n    }\n  }, \"   \", /*#__PURE__*/React.createElement(Table, {\n    className: classes.table,\n    \"aria-label\": \"customized table\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 10\n    }\n  }, /*#__PURE__*/React.createElement(TableHead, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(TableRow, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(StyledTableCell, {\n    align: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 19\n    }\n  }, \"N\\xFAmero Econ\\xF3mico\"), /*#__PURE__*/React.createElement(StyledTableCell, {\n    align: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 19\n    }\n  }, \"Fecha de Ingreso\"), /*#__PURE__*/React.createElement(StyledTableCell, {\n    align: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 19\n    }\n  }, \"Fecha de Liberaci\\xF3n\"), /*#__PURE__*/React.createElement(StyledTableCell, {\n    align: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 19\n    }\n  }, \"Liberar\"))), /*#__PURE__*/React.createElement(TableBody, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 15\n    }\n  }, data.map((row, index) => /*#__PURE__*/React.createElement(StyledTableRow, {\n    key: data.NumeroEconomico,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(StyledTableCell, {\n    align: \"center\",\n    component: \"th\",\n    scope: \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 21\n    }\n  }, row.NumeroEconomico), /*#__PURE__*/React.createElement(StyledTableCell, {\n    align: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 21\n    }\n  }, row.Fechadeingreso), /*#__PURE__*/React.createElement(StyledTableCell, {\n    align: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(TextField, {\n    htmlFor: \"age-native-simple\",\n    native: true,\n    id: \"date\",\n    label: \"Fecha\",\n    type: \"date\",\n    defaultValue: fecha,\n    inputRef: el => FechaRef.current[index] = el,\n    className: classes.textField,\n    InputLabelProps: {\n      shrink: true\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 53\n    }\n  }), \"  \"), /*#__PURE__*/React.createElement(StyledTableCell, {\n    align: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 23\n    }\n  }, /*#__PURE__*/React.createElement(ColorButton, {\n    variant: \"contained\",\n    name: row.NumeroEconomico,\n    color: \"primary\",\n    className: classes.submit,\n    onClick: () => {\n      row.Fechadeliberacion = FechaRef.current[index].value;\n      Liberar(row);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 21\n    }\n  }, \"Liberar\")))))), \"\\xA0\\xA0\"), /*#__PURE__*/React.createElement(Button, {\n    width: \"25%\",\n    align: \"left\",\n    variant: \"contained\",\n    color: \"secondary\",\n    className: classes.submit,\n    type: \"submit\",\n    onClick: () => {\n      history.push('/Revisiones/Formatos');\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 169,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(KeyboardReturn, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 179,\n      columnNumber: 27\n    }\n  })));\n};\n\nconst rootElement = document.getElementById(\"root\");\nReactDOM.render( /*#__PURE__*/React.createElement(EstatusPatio, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 187,\n    columnNumber: 17\n  }\n}), rootElement);\nexport default withRouter(EstatusPatio);","map":{"version":3,"sources":["/home/ubuntu/TTB012_MB/FrontEnd/src/componentes/paginas/formatos/estatuspatiosalida.jsx"],"names":["React","useRef","useState","useEffect","ReactDOM","withStyles","makeStyles","Table","TableBody","TableCell","TableContainer","TableHead","TableRow","Paper","Button","green","purple","Grid","Box","List","ListItem","ListItemIcon","ListItemText","withRouter","useHistory","swal","MenuItem","Input","TextField","Container","Typography","Select","getData","Liberar","KeyboardReturn","CheckCircleOutline","EstatusPatio","ColorButton","theme","root","color","palette","getContrastText","backgroundColor","StyledTableCell","head","error","light","common","white","size","body","fontSize","StyledTableRow","useStyles","paper","marginTop","spacing","display","flexDirection","table","minWidth","form","width","marginRight","submit","margin","dark","createData","name","classes","history","getCurrentDate","separator","newDate","Date","date","getDate","month","getMonth","year","getFullYear","fecha","FechaRef","data","setData","getAuto","url","_data","success","console","log","map","row","index","NumeroEconomico","Fechadeingreso","el","current","textField","shrink","Fechadeliberacion","value","push","rootElement","document","getElementById","render"],"mappings":"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","sourcesContent":["import React, { useRef, useState, useEffect } from 'react';\nimport ReactDOM from \"react-dom\";\nimport { withStyles, makeStyles } from '@material-ui/core/styles';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\nimport Button from '@material-ui/core/Button';\nimport { green, purple } from '@material-ui/core/colors';\nimport {Grid,Box}  from '@material-ui/core/';\nimport { List, ListItem, ListItemIcon, ListItemText } from '@material-ui/core';\nimport { withRouter } from 'react-router-dom';\nimport { useHistory } from \"react-router-dom\";\nimport swal from \"sweetalert\";\nimport MenuItem from '@material-ui/core/MenuItem';\nimport { Input, TextField, Container, Typography } from '@material-ui/core';\nimport Select from '@material-ui/core/Select';\nimport {getData, Liberar} from '../../Functions/EstatusPatio'\nimport KeyboardReturn from \"@material-ui/icons/KeyboardReturn\";   \nimport CheckCircleOutline from \"@material-ui/icons/CheckCircleOutline\";   \n\nconst EstatusPatio = () => {\n\n  const ColorButton = withStyles((theme) => ({\n        root: {\n          color: theme.palette.getContrastText(green[500]),\n          backgroundColor: green[500],\n          '&:hover': {\n            backgroundColor: green[700],\n          },\n        },\n      }))(Button);\n\n      const StyledTableCell = withStyles((theme) => ({\n        head: {\n          backgroundColor: theme.palette.error.light,\n          color: theme.palette.common.white,\n          size:  'small',\n        \n        },\n        body: {\n          fontSize: 14,\n        },\n      }))(TableCell);\n      \n      const StyledTableRow = withStyles((theme) => ({\n        root: {\n          '&:nth-of-type(odd)': {\n            \n          },\n        },\n      }))(TableRow);\n      \n      const useStyles = makeStyles((theme) => ({\n        paper: {\n          marginTop: theme.spacing(8),\n          display: 'flex',\n          flexDirection: 'column',\n          \n        },\n        table: {\n          minWidth: \"100%\",\n        },\n        form: {\n          width: '100%', // Fix IE 11 issue.\n          marginTop: theme.spacing(3),\n        marginRight: theme.spacing(2),\n        },\n        submit: {\n          margin: theme.spacing(3, 0, 2),\n          backgroundColor: theme.palette.error.dark,\n        },\n      }));\n      function createData(name) {\n        return { name};\n      }\n      \n      const classes = useStyles();\n      const history = useHistory()\n      function getCurrentDate(separator=''){\n\n        let newDate = new Date()\n        let date = newDate.getDate();\n        let month = newDate.getMonth() + 1;\n        let year = newDate.getFullYear();\n        \n          return `${year}${separator=\"-\"}${month<10?`0${month}`:`${month}`}${separator=\"-\"}${date}`\n      }\n      const fecha = getCurrentDate();\n\n      const FechaRef = useRef([])\n\n      const [data, setData] = useState([]);\n      useEffect(() => {\n        getAuto();\n      }, [])\n\n      const getAuto = async () => {\n        const url = 'estatusP/get_liberacion'\n        const _data = await getData(url)\n        if (_data.success){\n\tconsole.log(\"HOLIS\")\n          setData(_data.data)\n          console.log(data)\n          //setPreload(false)\n        }\n\t\n      }\n\n    return (\n    <Container component=\"main\">\n\n    <Typography component=\"h1\" variant=\"h5\" align=\"left\">\n      Liberación de Estatus Patio\n    </Typography>\n    <Typography component=\"h1\" variant=\"h5\" align=\"left\">\n      {fecha}\n    </Typography>\n    <TableContainer component={Paper}>\n{/*        <Grid item xs={12}>\n            <Box mr={2}>\n   */}   <Table className={classes.table} aria-label=\"customized table\">\n              <TableHead>\n                <TableRow>\n                  <StyledTableCell align=\"center\">Número Económico</StyledTableCell>\n                  <StyledTableCell align=\"center\">Fecha de Ingreso</StyledTableCell>\n                  <StyledTableCell align=\"center\">Fecha de Liberación</StyledTableCell>\n                  <StyledTableCell align=\"center\">Liberar</StyledTableCell>\n                </TableRow>\n              </TableHead>\n              <TableBody>\n              {data.map((row,index) => (\n                  <StyledTableRow key={data.NumeroEconomico}>\n                    <StyledTableCell align=\"center\" component=\"th\" scope=\"row\">\n                    {row.NumeroEconomico}\n                    </StyledTableCell>\n                    <StyledTableCell align=\"center\">{row.Fechadeingreso}</StyledTableCell>\n                    <StyledTableCell align=\"center\"><TextField\n                        htmlFor=\"age-native-simple\"\n                        native       \n                        id=\"date\"\n                        label=\"Fecha\"\n                        type=\"date\"\n                        defaultValue={fecha}\n                        inputRef={(el) => (FechaRef.current[index] = el)}\n                        className={classes.textField}\n                        InputLabelProps={{shrink: true,}}\n                      />  </StyledTableCell>\n                      <StyledTableCell align=\"center\">\n                    <ColorButton variant=\"contained\" name = {row.NumeroEconomico} color=\"primary\" className={classes.submit} onClick={() => {                                    \n                        row.Fechadeliberacion = FechaRef.current[index].value\n                        Liberar(row)\n                      }}>\n                    Liberar\n                    </ColorButton></StyledTableCell>                 \n                  \n                  </StyledTableRow>\n                ))}\n              </TableBody>\n              </Table>\n      {/* </Box>*/}\n      &nbsp;&nbsp;\n      \n      {/* </Grid>*/}\n    </TableContainer>\n    <Button\n                            width= \"25%\"\n                            align= \"left\"\n                            variant=\"contained\"\n                            color=\"secondary\"\n                            className={classes.submit}\n                            type=\"submit\"\n                            onClick={()=> {\n                                history.push('/Revisiones/Formatos')\n                            }}>\n                          <KeyboardReturn />\n                    </Button>\n    \n    </Container>\n    );\n}\n\nconst rootElement = document.getElementById(\"root\");\nReactDOM.render(<EstatusPatio />, rootElement);\n \nexport default withRouter(EstatusPatio);\n"]},"metadata":{},"sourceType":"module"}