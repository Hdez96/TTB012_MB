{"ast":null,"code":"import { BATCH_STATES, createBatchItem } from \"@rpldy/shared\";\nimport { DEFAULT_FILTER } from \"./defaults\";\nimport { getIsFileList } from \"./utils\";\nvar bCounter = 0;\n\nvar processFiles = function (batchId, files, fileFilter) {\n  return Array.prototype.filter.call(files, fileFilter || DEFAULT_FILTER).map(function (f) {\n    return createBatchItem(f, batchId);\n  });\n};\n\nexport default (function (files, uploaderId, options) {\n  bCounter += 1;\n  var id = \"batch-\".concat(bCounter);\n  var isFileList = getIsFileList(files);\n  files = Array.isArray(files) || isFileList ? files : [files];\n  return {\n    id: id,\n    uploaderId: uploaderId,\n    items: processFiles(id, files, options.fileFilter),\n    state: BATCH_STATES.ADDED,\n    completed: 0,\n    loaded: 0\n  };\n});","map":{"version":3,"sources":["/home/ubuntu/TTB012_MB/FrontEnd/node_modules/@rpldy/uploader/lib/esm/batch.js"],"names":["BATCH_STATES","createBatchItem","DEFAULT_FILTER","getIsFileList","bCounter","processFiles","batchId","files","fileFilter","Array","prototype","filter","call","map","f","uploaderId","options","id","concat","isFileList","isArray","items","state","ADDED","completed","loaded"],"mappings":"AAAA,SAASA,YAAT,EAAuBC,eAAvB,QAA8C,eAA9C;AACA,SAASC,cAAT,QAA+B,YAA/B;AACA,SAASC,aAAT,QAA8B,SAA9B;AACA,IAAIC,QAAQ,GAAG,CAAf;;AAEA,IAAIC,YAAY,GAAG,UAAUC,OAAV,EAAmBC,KAAnB,EAA0BC,UAA1B,EAAsC;AACvD,SAAOC,KAAK,CAACC,SAAN,CAAgBC,MAAhB,CAAuBC,IAAvB,CAA4BL,KAA5B,EAAmCC,UAAU,IAAIN,cAAjD,EAAiEW,GAAjE,CAAqE,UAAUC,CAAV,EAAa;AACvF,WAAOb,eAAe,CAACa,CAAD,EAAIR,OAAJ,CAAtB;AACD,GAFM,CAAP;AAGD,CAJD;;AAMA,gBAAgB,UAAUC,KAAV,EAAiBQ,UAAjB,EAA6BC,OAA7B,EAAsC;AACpDZ,EAAAA,QAAQ,IAAI,CAAZ;AACA,MAAIa,EAAE,GAAG,SAASC,MAAT,CAAgBd,QAAhB,CAAT;AACA,MAAIe,UAAU,GAAGhB,aAAa,CAACI,KAAD,CAA9B;AACAA,EAAAA,KAAK,GAAGE,KAAK,CAACW,OAAN,CAAcb,KAAd,KAAwBY,UAAxB,GAAqCZ,KAArC,GAA6C,CAACA,KAAD,CAArD;AACA,SAAO;AACLU,IAAAA,EAAE,EAAEA,EADC;AAELF,IAAAA,UAAU,EAAEA,UAFP;AAGLM,IAAAA,KAAK,EAAEhB,YAAY,CAACY,EAAD,EAAKV,KAAL,EAAYS,OAAO,CAACR,UAApB,CAHd;AAILc,IAAAA,KAAK,EAAEtB,YAAY,CAACuB,KAJf;AAKLC,IAAAA,SAAS,EAAE,CALN;AAMLC,IAAAA,MAAM,EAAE;AANH,GAAP;AAQD,CAbD","sourcesContent":["import { BATCH_STATES, createBatchItem } from \"@rpldy/shared\";\nimport { DEFAULT_FILTER } from \"./defaults\";\nimport { getIsFileList } from \"./utils\";\nvar bCounter = 0;\n\nvar processFiles = function (batchId, files, fileFilter) {\n  return Array.prototype.filter.call(files, fileFilter || DEFAULT_FILTER).map(function (f) {\n    return createBatchItem(f, batchId);\n  });\n};\n\nexport default (function (files, uploaderId, options) {\n  bCounter += 1;\n  var id = \"batch-\".concat(bCounter);\n  var isFileList = getIsFileList(files);\n  files = Array.isArray(files) || isFileList ? files : [files];\n  return {\n    id: id,\n    uploaderId: uploaderId,\n    items: processFiles(id, files, options.fileFilter),\n    state: BATCH_STATES.ADDED,\n    completed: 0,\n    loaded: 0\n  };\n});"]},"metadata":{},"sourceType":"module"}