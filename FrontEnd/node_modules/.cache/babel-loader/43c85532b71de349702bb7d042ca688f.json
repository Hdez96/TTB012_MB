{"ast":null,"code":"var _jsxFileName = \"/home/ubuntu/TTB012_MB/FrontEnd/src/componentes/paginas/formatos/ImageMB.jsx\";\nimport React, { useRef } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { withRouter } from 'react-router-dom';\nimport { withStyles, makeStyles } from '@material-ui/core/styles';\nimport Uploady from \"@rpldy/uploady\";\nimport UploadButton from \"@rpldy/upload-button\";\nimport UploadPreview from \"@rpldy/upload-preview\";\nimport axios from 'axios';\nimport ImageUploading from \"react-images-uploading\";\n\nconst ImageMB = () => {\n  const filterBySize = file => {\n    //filter out images larger than 5MB\n    return file.size <= 5242880;\n  };\n\n  const useStyles = makeStyles(theme => ({\n    formControl: {\n      margin: theme.spacing(1),\n      minWidth: 300\n    },\n    selectEmpty: {\n      marginTop: theme.spacing(2)\n    },\n    submit: {\n      margin: theme.spacing(3, 0, 2),\n      backgroundColor: theme.palette.error.dark\n    }\n  }));\n  const uploadedImage = React.useRef(null);\n  const imageUploader = React.useRef(null);\n\n  const handleImageUpload = e => {\n    const [file] = e.target.files;\n\n    if (file) {\n      const reader = new FileReader();\n      const reader1 = new FileReader();\n      const {\n        current\n      } = uploadedImage;\n      current.file = file;\n\n      reader.onload = e => {\n        current.src = e.target.result;\n      };\n\n      reader.readAsDataURL(file);\n      reader1.readAsBinaryString(file);\n      console.log(file);\n      console.log(reader1);\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      display: \"flex\",\n      flexDirection: \"column\",\n      alignItems: \"center\",\n      justifyContent: \"center\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 5\n    }\n  }, \"Para cambiar la imagen del header de los PDF's haga click en el recuadro.\", /*#__PURE__*/React.createElement(\"input\", {\n    type: \"file\",\n    accept: \"image/*\",\n    onChange: handleImageUpload,\n    ref: imageUploader,\n    style: {\n      display: \"none\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      height: \"300px\",\n      width: \"500px\",\n      border: \"1px dashed black\"\n    },\n    onClick: () => imageUploader.current.click(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    ref: uploadedImage,\n    style: {\n      width: \"100%\",\n      height: \"100%\",\n      position: \"acsolute\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 9\n    }\n  })));\n};\n\nexport default withRouter(ImageMB);","map":{"version":3,"sources":["/home/ubuntu/TTB012_MB/FrontEnd/src/componentes/paginas/formatos/ImageMB.jsx"],"names":["React","useRef","ReactDOM","withRouter","withStyles","makeStyles","Uploady","UploadButton","UploadPreview","axios","ImageUploading","ImageMB","filterBySize","file","size","useStyles","theme","formControl","margin","spacing","minWidth","selectEmpty","marginTop","submit","backgroundColor","palette","error","dark","uploadedImage","imageUploader","handleImageUpload","e","target","files","reader","FileReader","reader1","current","onload","src","result","readAsDataURL","readAsBinaryString","console","log","display","flexDirection","alignItems","justifyContent","height","width","border","click","position"],"mappings":"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","sourcesContent":["import React, {useRef} from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { withRouter } from 'react-router-dom';\nimport { withStyles, makeStyles } from '@material-ui/core/styles';\nimport Uploady from \"@rpldy/uploady\";\nimport UploadButton from \"@rpldy/upload-button\";\nimport UploadPreview from \"@rpldy/upload-preview\";\nimport axios from 'axios';\nimport ImageUploading from \"react-images-uploading\";\n\nconst ImageMB = () => {\n\n    const filterBySize = (file) => {\n  //filter out images larger than 5MB\n  return file.size <= 5242880;\n};\n\n    const useStyles = makeStyles((theme) => ({\n    formControl: {\n      margin: theme.spacing(1),\n      minWidth: 300,\n    },\n    selectEmpty: {\n      marginTop: theme.spacing(2),\n    },\n    submit: {\n          margin: theme.spacing(3, 0, 2),\n          backgroundColor: theme.palette.error.dark,\n        },\n  }));\n\n  const uploadedImage = React.useRef(null);\n  const imageUploader = React.useRef(null);\n\n  const handleImageUpload = e => {\n    const [file] = e.target.files;\n    if (file) {\n      const reader = new FileReader();\n      const reader1 = new FileReader();\n      const { current } = uploadedImage;\n      current.file = file;\n      reader.onload = e => {\n        current.src = e.target.result;\n\n      };\n      reader.readAsDataURL(file);\n      reader1.readAsBinaryString(file);\n      console.log(file);\n      console.log(reader1)\n    }\n  };\n\n  return (\n  \n    <div\n      style={{\n        display: \"flex\",\n        flexDirection: \"column\",\n        alignItems: \"center\",\n        justifyContent: \"center\"\n      }}\n    >\n    Para cambiar la imagen del header de los PDF's haga click en el recuadro.\n      <input\n        type=\"file\"\n        accept=\"image/*\"\n        onChange={handleImageUpload}\n        ref={imageUploader}\n        style={{\n          display: \"none\"\n        }}\n      />\n      <div\n        style={{\n          height: \"300px\",\n          width: \"500px\",\n          border: \"1px dashed black\"\n        }}\n        onClick={() => imageUploader.current.click()}\n      >\n        <img\n          ref={uploadedImage}\n          style={{\n            width: \"100%\",\n            height: \"100%\",\n            position: \"acsolute\"\n          }}\n        />\n      </div>\n    </div>\n  );\n}\n\nexport default withRouter(ImageMB);\n"]},"metadata":{},"sourceType":"module"}