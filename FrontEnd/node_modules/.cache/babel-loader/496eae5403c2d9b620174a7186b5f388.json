{"ast":null,"code":"import axios from 'axios';\nimport { saveAs } from 'file-saver';\nexport const formRegister = newForm => {\n  return axios.post('CedulaTRA/cedulatra', {\n    NumeroFactura: newForm.NumeroFactura,\n    FechaAlta: newForm.FechaAlta,\n    Propietario: newForm.Propietario,\n    Domicilio: newForm.Domicilio,\n    Telefonos: newForm.Telefonos,\n    Responsable: newForm.Responsable,\n    Marca: newForm.Marca,\n    Modelo: newForm.Modelo,\n    Año: newForm.Año,\n    NumeroMotor: newForm.NumeroMotor,\n    NumeroChasis: newForm.NumeroChasis,\n    NumeroCarroceria: newForm.NumeroCarroceria,\n    NumeroTransmision: newForm.NumeroTransmision,\n    NumeroEconomico: newForm.NumeroEconomico,\n    PlacaVehicular: newForm.PlacaVehicular,\n    Observaciones: newForm.Observaciones,\n    Nombre: newForm.Nombre,\n    FechaRegistro: newForm.FechaRegistro //            Firma: newForm.Firma\n\n  }).then(response => {\n    if (response.status) {\n      return {\n        success: true\n      };\n      console.log('Datos enviados.');\n    } else console.log('Datos NO enviados.');\n  }).catch(err => {\n    console.log(\"Datos NO enviados.\\n\" + err);\n  });\n};\nexport function downloadPDF(name) {\n  console.log(\"Cedulatra functions\");\n  let dir = name;\n  return axios.get('cedulatra/fetch-pdf', {\n    params: {\n      PDF: dir\n    },\n    responseType: 'blob'\n  }).then(res => {\n    const pdfBlob = new Blob([res.data], {\n      type: 'application/pdf'\n    });\n    saveAs(pdfBlob, 'Factura' + name + '.pdf');\n  });\n}\nexport const getData = NumeroEconomico => {\n  return axios.post('/CedulaTRA/BusquedaPDF/fetch-cedulatra-pdf', {\n    NumeroEconomico: NumeroEconomico\n  }).then(resp => {\n    //\tconsole.log(resp.data.data)\n    return {\n      success: true,\n      data: resp.data.data\n    };\n  }).catch(err => {\n    console.log(\"Error al cargar los datos:\" + err);\n    return {\n      success: false\n    };\n  });\n};\nexport const getAutobus = newForm => {\n  return axios.post(\"CedulaTRA/get_autobus\", {\n    NumeroEconomico: newForm.NumeroEconomico\n  }).then(resp => {\n    //console.log(\"R: \"+ resp.data.data)\n    return {\n      success: true,\n      data: resp.data.data\n    };\n  }).catch(err => {\n    console.log(\"Error al cargar los datos de >: \" + newForm.NumeroEconomico + \" error \" + err);\n    return {\n      success: false\n    };\n  });\n};\nexport const getEcos = newForm => {\n  return axios.post(\"CedulaTRA/get_autobuses\").then(resp => {\n    //console.log(\"R: \"+ resp.data.data)\n    return {\n      success: true,\n      data: resp.data.data\n    };\n  }).catch(err => {\n    console.log(\"Error al cargar los datos de Numeros economicos \" + err);\n    return {\n      success: false\n    };\n  });\n};\n/*\nexport const PDF = newForm => {\n\treturn axios\n\t.get('cedulatra/fetch-pdf', { responseType: 'blob' })\n            .then((res) => {\n                const pdfBlob = new Blob([res.data], {type: 'application/pdf'})\n\n                saveAs(pdfBlob, 'Factura'+newForm.NumeroFactura+'.pdf')\n            })\n}\n*/","map":{"version":3,"sources":["/home/ubuntu/TTB012_MB/FrontEnd/src/componentes/Functions/CedulaTRAFunctions.js"],"names":["axios","saveAs","formRegister","newForm","post","NumeroFactura","FechaAlta","Propietario","Domicilio","Telefonos","Responsable","Marca","Modelo","Año","NumeroMotor","NumeroChasis","NumeroCarroceria","NumeroTransmision","NumeroEconomico","PlacaVehicular","Observaciones","Nombre","FechaRegistro","then","response","status","success","console","log","catch","err","downloadPDF","name","dir","get","params","PDF","responseType","res","pdfBlob","Blob","data","type","getData","resp","getAutobus","getEcos"],"mappings":"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","sourcesContent":["import axios from 'axios'\nimport { saveAs } from 'file-saver'\n\nexport const formRegister =  newForm => {\n    return axios\n        .post('CedulaTRA/cedulatra',{\n            NumeroFactura: newForm.NumeroFactura,\n            FechaAlta: newForm.FechaAlta,\n            Propietario: newForm.Propietario,\n            Domicilio: newForm.Domicilio,\n            Telefonos: newForm.Telefonos,\n            Responsable: newForm.Responsable,\n            Marca: newForm.Marca,\n            Modelo: newForm.Modelo,\n            Año: newForm.Año,\n            NumeroMotor: newForm.NumeroMotor,\n            NumeroChasis: newForm.NumeroChasis,\n            NumeroCarroceria: newForm.NumeroCarroceria,\n            NumeroTransmision: newForm.NumeroTransmision,\n            NumeroEconomico: newForm.NumeroEconomico,\n            PlacaVehicular: newForm.PlacaVehicular,\n            Observaciones: newForm.Observaciones,\n            Nombre: newForm.Nombre,\n            FechaRegistro: newForm.FechaRegistro,\n//            Firma: newForm.Firma\n        })\n        .then(response => {\n            if(response.status)\n\t    {\n\t\treturn {success:true}\n                console.log('Datos enviados.')\n\t    }\n            else\n                console.log('Datos NO enviados.')\n        })\n        .catch(err => {\n            console.log(\"Datos NO enviados.\\n\"+err)\n        })\n}\n\nexport function downloadPDF(name){\n    console.log(\"Cedulatra functions\");\n    let dir = name\n    return axios\n\t.get('cedulatra/fetch-pdf', { params: {PDF: dir},responseType: 'blob' })\n            .then((res) => {\n                const pdfBlob = new Blob([res.data], {type: 'application/pdf'})\n\n                saveAs(pdfBlob, 'Factura'+name+'.pdf')\n            })\n}\n\nexport const getData = NumeroEconomico => {\n    return axios\n\t.post('/CedulaTRA/BusquedaPDF/fetch-cedulatra-pdf',{\n        NumeroEconomico: NumeroEconomico\n    })\n    .then(resp => {\n//\tconsole.log(resp.data.data)\n        return {success:true, data: resp.data.data}\n    })\n    .catch(err => {        \n\t    console.log(\"Error al cargar los datos:\" +err);\n        return {success:false}\n    })\n}\n\nexport const getAutobus = newForm => {\n    return axios\n    .post(\"CedulaTRA/get_autobus\",{\n        NumeroEconomico: newForm.NumeroEconomico\n    })\n    .then(resp => {\n        //console.log(\"R: \"+ resp.data.data)\n        return {success:true, data: resp.data.data}\n    })\n    .catch(err => {\n        console.log(\"Error al cargar los datos de >: \"+newForm.NumeroEconomico+\" error \"+err);\n        return {success:false}\n    })\n}\n\nexport const getEcos = newForm => {\n    return axios\n    .post(\"CedulaTRA/get_autobuses\")\n    .then(resp => {\n        //console.log(\"R: \"+ resp.data.data)\n        return {success:true, data: resp.data.data}\n    })\n    .catch(err => {\n        console.log(\"Error al cargar los datos de Numeros economicos \"+err);\n        return {success:false}\n    })\n}\n\n/*\nexport const PDF = newForm => {\n\treturn axios\n\t.get('cedulatra/fetch-pdf', { responseType: 'blob' })\n            .then((res) => {\n                const pdfBlob = new Blob([res.data], {type: 'application/pdf'})\n\n                saveAs(pdfBlob, 'Factura'+newForm.NumeroFactura+'.pdf')\n            })\n}\n*/\n"]},"metadata":{},"sourceType":"module"}