{"ast":null,"code":"var _jsxFileName = \"/home/ubuntu/TTB012_MB/FrontEnd/src/componentes/paginas/Formatos.jsx\";\nimport React from 'react';\nimport { withStyles, makeStyles } from '@material-ui/core/styles';\nimport { useHistory } from \"react-router-dom\";\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\nimport Button from '@material-ui/core/Button';\nimport { green, purple, red } from '@material-ui/core/colors';\nimport { Grid, Box } from '@material-ui/core/';\nimport { List, ListItem, ListItemIcon, ListItemText } from '@material-ui/core';\nimport { withRouter } from 'react-router-dom';\nimport swal from 'sweetalert';\n\nconst Formatos = () => {\n  const ColorButton = withStyles(theme => ({\n    root: {\n      color: '#FFFFFF',\n      backgroundColor: '#992830',\n      '&:hover': {\n        backgroundColor: '#BE1A25'\n      }\n    }\n  }))(Button);\n  const StyledTableCell = withStyles(theme => ({\n    head: {\n      backgroundColor: '#7D2027',\n      color: theme.palette.common.white,\n      size: 'small'\n    },\n    body: {\n      fontSize: 14\n    }\n  }))(TableCell);\n  const StyledTableRow = withStyles(theme => ({\n    root: {\n      '&:nth-of-type(odd)': {\n        backgroundColor: theme.palette.action.hover\n      }\n    }\n  }))(TableRow);\n\n  function createData(name, dir) {\n    return {\n      name,\n      dir\n    };\n  }\n\n  const rows = [createData('Cédula de revisión técnica inicial del autobús', '/cedularti'), createData('Cédula técnica de registro del autobús', '/cedulatra'), createData('Consumo de combustible', '/consumo'), createData('Consumo y mantenimiento', '/consumomantenimiento'), createData('Ingreso estatus de patio', '/estatuspatio'), createData('Liberación estatus de patio', '/estatuspatioS'), createData('Kilometraje', '/km'), createData('Pruebas de desempeño', '/pruebades'), createData('REFFA', '/reffa'), createData('REFFA Fotos', '/reffaindice'), createData('Rendimientos', '/rendimiento')];\n\n  const Disponible = row => {\n    if (row.name == \"Consumo de combustible\") return false;else if (row.name == \"Kilometraje\") return false;else {\n      return false;\n    }\n  };\n\n  const useStyles = makeStyles(theme => ({\n    table: {\n      minWidth: 50\n    }\n  }));\n  const history = useHistory();\n\n  const handleclick = name => {\n    history.push(name);\n  };\n\n  const classes = useStyles();\n  /*(function()\n  {\n    if( window.localStorage )\n    {\n      if( !localStorage.getItem('firstLoad') )\n      {\n        localStorage['firstLoad'] = true;\n        window.location.reload();\n      }  \n      else\n        localStorage.removeItem('firstLoad');\n    }\n  })();\n    <StyledTableRow key=\"cedularti\">\n      <StyledTableCell align=\"center\" component=\"th\" scope=\"row\">\n        Cédula de revisión técnica inicial del autobús\n      </StyledTableCell>\n      <StyledTableCell align=\"center\"><ColorButton variant=\"contained\" color=\"primary\" name=\"/reporteincidencia\" onClick={() => {                                    \n                swal(\"¡Lo sentimos!\",\"Esta función se encuentra en desarrollo...\", \"error\");  \n              }} className={classes.margin}>\n                    <ListItemText primary=\"Crear\"/>\n      </ColorButton></StyledTableCell>\n  \n    </StyledTableRow>\n  */\n\n  return /*#__PURE__*/React.createElement(TableContainer, {\n    component: Paper,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Table, {\n    className: classes.table,\n    \"aria-label\": \"customized table\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(TableHead, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(TableRow, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(StyledTableCell, {\n    align: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 13\n    }\n  }, \"Nombre del formato\"), /*#__PURE__*/React.createElement(StyledTableCell, {\n    align: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 13\n    }\n  }))), /*#__PURE__*/React.createElement(TableBody, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 9\n    }\n  }, rows.map(row => /*#__PURE__*/React.createElement(StyledTableRow, {\n    key: row.name,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(StyledTableCell, {\n    align: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(ColorButton, {\n    style: {\n      width: '400px'\n    },\n    variant: \"contained\",\n    color: \"primary\",\n    id: row.dir,\n    onClick: () => {\n      handleclick(row.dir);\n    },\n    className: classes.margin,\n    disabled: Disponible(row),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 47\n    }\n  }, row.name)))))));\n};\n\nexport default withRouter(Formatos);","map":{"version":3,"sources":["/home/ubuntu/TTB012_MB/FrontEnd/src/componentes/paginas/Formatos.jsx"],"names":["React","withStyles","makeStyles","useHistory","Table","TableBody","TableCell","TableContainer","TableHead","TableRow","Paper","Button","green","purple","red","Grid","Box","List","ListItem","ListItemIcon","ListItemText","withRouter","swal","Formatos","ColorButton","theme","root","color","backgroundColor","StyledTableCell","head","palette","common","white","size","body","fontSize","StyledTableRow","action","hover","createData","name","dir","rows","Disponible","row","useStyles","table","minWidth","history","handleclick","push","classes","map","width","margin"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { withStyles, makeStyles } from '@material-ui/core/styles';\nimport { useHistory } from \"react-router-dom\";\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\nimport Button from '@material-ui/core/Button';\nimport { green, purple, red} from '@material-ui/core/colors';\nimport {Grid,Box}  from '@material-ui/core/';\nimport { List, ListItem, ListItemIcon, ListItemText } from '@material-ui/core';\nimport { withRouter } from 'react-router-dom';\nimport swal from 'sweetalert';\n\nconst Formatos = () => {\n\n    const ColorButton = withStyles((theme) => ({\n        root: {\n          color: '#FFFFFF',\n          backgroundColor: '#992830',\n          '&:hover': {\n            backgroundColor: '#BE1A25',\n          },\n        },\n      }))(Button);\n\n\n\t      \n      const StyledTableCell = withStyles((theme) => ({\n        head: {\n          backgroundColor: '#7D2027',\n          color: theme.palette.common.white,\n          size:  'small',\n        \n        },\n        body: {\n          fontSize: 14,\n        },\n      }))(TableCell);\n      \n      const StyledTableRow = withStyles((theme) => ({\n        root: {\n          '&:nth-of-type(odd)': {\n            backgroundColor: theme.palette.action.hover,\n            \n          },\n        },\n      }))(TableRow);\n      \n      function createData(name, dir) {\n        return { name, dir};\n      }\n      \n      const rows = [\n        createData('Cédula de revisión técnica inicial del autobús','/cedularti'),\n        createData('Cédula técnica de registro del autobús','/cedulatra'),\n        createData('Consumo de combustible', '/consumo'),\n        createData('Consumo y mantenimiento','/consumomantenimiento'),\n        createData('Ingreso estatus de patio','/estatuspatio'),\n        createData('Liberación estatus de patio','/estatuspatioS'),\n        createData('Kilometraje','/km'),\n        createData('Pruebas de desempeño','/pruebades'),\n        createData('REFFA','/reffa'),\n        createData('REFFA Fotos','/reffaindice'),\n        createData('Rendimientos','/rendimiento')\n      ];      \n\n      const Disponible= (row)=>{\n        if(row.name==\"Consumo de combustible\")\n          return false;\n        else if(row.name==\"Kilometraje\")\n          return false;\n        else{\n          return false;\n        }\n      }\n\n      const useStyles = makeStyles(theme => ({\n        table: {\n            minWidth: 50\n        }\n        \n      }));\n      const history = useHistory();\n    const handleclick = (name) => {\n    \thistory.push(name)    \t\n    }\n\n      const classes = useStyles();\n/*(function()\n{\n  if( window.localStorage )\n  {\n    if( !localStorage.getItem('firstLoad') )\n    {\n      localStorage['firstLoad'] = true;\n      window.location.reload();\n    }  \n    else\n      localStorage.removeItem('firstLoad');\n  }\n})();\n  <StyledTableRow key=\"cedularti\">\n    <StyledTableCell align=\"center\" component=\"th\" scope=\"row\">\n      Cédula de revisión técnica inicial del autobús\n    </StyledTableCell>\n    <StyledTableCell align=\"center\"><ColorButton variant=\"contained\" color=\"primary\" name=\"/reporteincidencia\" onClick={() => {                                    \n              swal(\"¡Lo sentimos!\",\"Esta función se encuentra en desarrollo...\", \"error\");  \n            }} className={classes.margin}>\n                  <ListItemText primary=\"Crear\"/>\n    </ColorButton></StyledTableCell>\n\n  </StyledTableRow>\n*/\n    return (  \n    <TableContainer component={Paper}>\n        {/* <Grid item xs={12}>\n            <Box mr={2}>*/}\n      <Table className={classes.table} aria-label=\"customized table\">\n        <TableHead>\n          <TableRow>\n            <StyledTableCell align=\"center\">Nombre del formato</StyledTableCell>\n            <StyledTableCell align=\"center\"></StyledTableCell>\n            \n          </TableRow>\n        </TableHead>\n        <TableBody>\n          \n          {rows.map((row) => (\n            <StyledTableRow key={row.name}>\n              <StyledTableCell align=\"center\"><ColorButton style={{width:'400px'}} variant=\"contained\" color=\"primary\" id={row.dir} onClick={() => {                                    \n                        handleclick(row.dir)\n                      }} className={classes.margin} disabled={Disponible(row)}>\n                            {row.name}\n              </ColorButton></StyledTableCell>\n\n            </StyledTableRow>\n          ))}\n\n\n{/*          <StyledTableRow key=\"rendimientos\">\n              <StyledTableCell align=\"center\" component=\"th\" scope=\"row\">\n               \tReporte de incidencias\n              </StyledTableCell>\n              <StyledTableCell align=\"center\"><ColorButton disabled = \"true\" variant=\"contained\" color=\"primary\" name=\"/reporteincidencia\" onClick={() => {                                    \n                        handleclick(\"/reporteincidencia\")\n                      }} className={classes.margin}>\n                            <ListItemText primary=\"Crear\"/>\n              </ColorButton></StyledTableCell>\n\n            </StyledTableRow>*/}\n        </TableBody>\n      </Table>\n      {/* </Box>\n      </Grid>*/}\n    </TableContainer>\n    \n    );\n}\n \nexport default withRouter(Formatos);\n"]},"metadata":{},"sourceType":"module"}