{"ast":null,"code":"import axios from 'axios';\nimport { saveAs } from 'file-saver';\nexport const sendData = newForm => {\n  return axios.post('Consumo/consumo', {\n    NumeroEconomico: newForm.NumeroEconomico,\n    Mes: newForm.Mes,\n    Año: newForm.Año,\n    Consumo: newForm.Consumo,\n    Modulo: newForm.Modulo\n  }).then(response => {\n    console.log('Datos enviados.');\n  }).catch(err => {\n    console.log(\"Datos NO enviados.\\n\" + err);\n  });\n};\nexport function downloadPDF(name) {\n  console.log(name);\n  return axios.get('cedulatra/fetch-pdf', {\n    params: {\n      PDF: name\n    },\n    responseType: 'blob'\n  }).then(res => {\n    const pdfBlob = new Blob([res.data], {\n      type: 'application/pdf'\n    });\n    saveAs(pdfBlob, 'Factura' + name + '.pdf');\n  });\n}\nexport const getDataCon = url => {\n  return axios.post('Consumo/getData').then(resp => {\n    //  console.log(resp.data.data)\n    return {\n      success: true,\n      data: resp.data.data\n    };\n  }).catch(err => {\n    console.log(\"Eror al cargar los datos de >: \" + url + \" error \" + err);\n    return {\n      success: false\n    };\n  });\n};\nexport const PDF = newForm => {\n  console.log(\"Creando PDF\");\n  return axios.post('Consumo/ConsumoPDF', {\n    Año: newForm.Año,\n    Mes: newForm.Mes\n  }).then(res => {\n    //const pdfBlob = new Blob([res.data], {type: 'application/pdf'})\n    //saveAs(pdfBlob, 'Factura'+newForm.Año+'.pdf')\n    console.log(\"Creado!\");\n  }).catch(err => {\n    console.log(err);\n  });\n};","map":{"version":3,"sources":["/home/ubuntu/TTB012_MB/FrontEnd/src/componentes/Functions/Consumo.js"],"names":["axios","saveAs","sendData","newForm","post","NumeroEconomico","Mes","Año","Consumo","Modulo","then","response","console","log","catch","err","downloadPDF","name","get","params","PDF","responseType","res","pdfBlob","Blob","data","type","getDataCon","url","resp","success"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,MAAT,QAAuB,YAAvB;AAEA,OAAO,MAAMC,QAAQ,GAAIC,OAAO,IAAI;AAChC,SAAOH,KAAK,CACPI,IADE,CACG,iBADH,EACqB;AACpBC,IAAAA,eAAe,EAAEF,OAAO,CAACE,eADL;AAEpBC,IAAAA,GAAG,EAAEH,OAAO,CAACG,GAFO;AAGpBC,IAAAA,GAAG,EAAEJ,OAAO,CAACI,GAHO;AAIpBC,IAAAA,OAAO,EAAEL,OAAO,CAACK,OAJG;AAKpBC,IAAAA,MAAM,EAAEN,OAAO,CAACM;AALI,GADrB,EAQFC,IARE,CAQGC,QAAQ,IAAI;AACvBC,IAAAA,OAAO,CAACC,GAAR,CAAY,iBAAZ;AACM,GAVE,EAWFC,KAXE,CAWIC,GAAG,IAAI;AACVH,IAAAA,OAAO,CAACC,GAAR,CAAY,yBAAuBE,GAAnC;AACH,GAbE,CAAP;AAcH,CAfM;AAiBP,OAAO,SAASC,WAAT,CAAqBC,IAArB,EAA0B;AAC7BL,EAAAA,OAAO,CAACC,GAAR,CAAYI,IAAZ;AACA,SAAOjB,KAAK,CACdkB,GADS,CACL,qBADK,EACkB;AAAEC,IAAAA,MAAM,EAAE;AAACC,MAAAA,GAAG,EAAEH;AAAN,KAAV;AAAsBI,IAAAA,YAAY,EAAE;AAApC,GADlB,EAEEX,IAFF,CAEQY,GAAD,IAAS;AACX,UAAMC,OAAO,GAAG,IAAIC,IAAJ,CAAS,CAACF,GAAG,CAACG,IAAL,CAAT,EAAqB;AAACC,MAAAA,IAAI,EAAE;AAAP,KAArB,CAAhB;AAEAzB,IAAAA,MAAM,CAACsB,OAAD,EAAU,YAAUN,IAAV,GAAe,MAAzB,CAAN;AACH,GANF,CAAP;AAOH;AAED,OAAO,MAAMU,UAAU,GAAGC,GAAG,IAAI;AAC7B,SAAO5B,KAAK,CACXI,IADM,CACD,iBADC,EAENM,IAFM,CAEDmB,IAAI,IAAI;AAClB;AACQ,WAAO;AAACC,MAAAA,OAAO,EAAC,IAAT;AAAeL,MAAAA,IAAI,EAAEI,IAAI,CAACJ,IAAL,CAAUA;AAA/B,KAAP;AACH,GALM,EAMNX,KANM,CAMAC,GAAG,IAAI;AACVH,IAAAA,OAAO,CAACC,GAAR,CAAY,oCAAkCe,GAAlC,GAAsC,SAAtC,GAAgDb,GAA5D;AACA,WAAO;AAACe,MAAAA,OAAO,EAAC;AAAT,KAAP;AACH,GATM,CAAP;AAUH,CAXM;AAaP,OAAO,MAAMV,GAAG,GAAGjB,OAAO,IAAI;AAC7BS,EAAAA,OAAO,CAACC,GAAR,CAAY,aAAZ;AACA,SAAOb,KAAK,CACXI,IADM,CACD,oBADC,EACsB;AAC5BG,IAAAA,GAAG,EAAEJ,OAAO,CAACI,GADe;AAEjBD,IAAAA,GAAG,EAAEH,OAAO,CAACG;AAFI,GADtB,EAKKI,IALL,CAKWY,GAAD,IAAS;AACV;AACA;AACdV,IAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ;AACU,GATL,EAUNC,KAVM,CAUAC,GAAG,IAAI;AACbH,IAAAA,OAAO,CAACC,GAAR,CAAYE,GAAZ;AACA,GAZM,CAAP;AAaA,CAfM","sourcesContent":["import axios from 'axios'\nimport { saveAs } from 'file-saver'\n\nexport const sendData =  newForm => {\n    return axios\n        .post('Consumo/consumo',{\n            NumeroEconomico: newForm.NumeroEconomico,\n            Mes: newForm.Mes,\n            Año: newForm.Año,\n            Consumo: newForm.Consumo,\n            Modulo: newForm.Modulo\n        })\n        .then(response => {\n\t\t console.log('Datos enviados.')\n        })\n        .catch(err => {\n            console.log(\"Datos NO enviados.\\n\"+err)\n        })\n}\n\nexport function downloadPDF(name){\n    console.log(name);\n    return axios\n\t.get('cedulatra/fetch-pdf', { params: {PDF: name},responseType: 'blob' })\n            .then((res) => {\n                const pdfBlob = new Blob([res.data], {type: 'application/pdf'})\n\n                saveAs(pdfBlob, 'Factura'+name+'.pdf')\n            })\n}\n\nexport const getDataCon = url => {\n    return axios\n    .post('Consumo/getData')\n    .then(resp => {\n//  console.log(resp.data.data)\n        return {success:true, data: resp.data.data}\n    })\n    .catch(err => {\n        console.log(\"Eror al cargar los datos de >: \"+url+\" error \"+err);\n        return {success:false}\n    })\n}\n\nexport const PDF = newForm => {\n\tconsole.log(\"Creando PDF\")\n\treturn axios\n\t.post('Consumo/ConsumoPDF',  {\n\t\tAño: newForm.Año,\n            \tMes: newForm.Mes\n\t})\n            .then((res) => {\n                \t//const pdfBlob = new Blob([res.data], {type: 'application/pdf'})\n\t                //saveAs(pdfBlob, 'Factura'+newForm.Año+'.pdf')\n\t\t\tconsole.log(\"Creado!\")\n            })\n\t.catch(err => {\n\t\tconsole.log(err)\n\t})\n}\n\n"]},"metadata":{},"sourceType":"module"}