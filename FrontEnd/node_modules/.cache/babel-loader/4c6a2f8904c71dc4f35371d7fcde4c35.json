{"ast":null,"code":"var _jsxFileName = \"/home/ubuntu/TTB012_MB/FrontEnd/src/componentes/paginas/formatos/Busqueda.jsx\";\nimport React, { useState, useRef, useEffect } from 'react';\nimport { withStyles, makeStyles } from '@material-ui/core/styles';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport ArrowDownwardIcon from '@material-ui/icons/ArrowDownward';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\nimport Button from '@material-ui/core/Button';\nimport CloudUploadIcon from '@material-ui/icons/CloudUpload';\nimport KeyboardVoiceIcon from '@material-ui/icons/KeyboardVoice';\nimport Icon from '@material-ui/core/Icon';\nimport SaveIcon from '@material-ui/icons/Save';\nimport { green, purple } from '@material-ui/core/colors';\nimport { Grid, Box } from '@material-ui/core/';\nimport { withRouter } from 'react-router-dom';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport FormHelperText from '@material-ui/core/FormHelperText';\nimport FormControl from '@material-ui/core/FormControl';\nimport Select from '@material-ui/core/Select';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Typography from '@material-ui/core/Typography';\nimport Container from '@material-ui/core/Container';\nimport IconButton from '@material-ui/core/IconButton';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport BarChartIcon from '@material-ui/icons/BarChart';\nimport AssignmentIcon from '@material-ui/icons/Assignment';\nimport TextField from '@material-ui/core/TextField';\nimport Input from '@material-ui/core/Input';\nimport { useHistory } from \"react-router-dom\";\nimport { EXCEL, downloadPDF, downloadExcelP, downloadPDFP, downloadExcel } from '../../Functions/Busqueda';\nimport { getData } from '../../Functions/CedulaTRAFunctions';\nimport { getDataCedularti, downloadPDFR } from '../../Functions/RevTecnicaInicial';\nimport { getDataCon, PDF } from '../../Functions/Consumo';\nimport { sendFecha, sendFechaExcel } from '../../Functions/EstatusPatio';\nimport { getDataConsumoEmpresa, EPDF } from '../../Functions/ConsumoEmpresa';\nimport { getDataKilometraje, KPDF } from '../../Functions/Kilometraje';\nimport { getDataPruebas } from '../../Functions/PruebasDeDesempeños';\nimport { getDataRendimientos, RPDF } from '../../Functions/Rendimientos';\nimport swal from \"sweetalert\";\nimport Search from \"@material-ui/icons/Search\";\n\nconst Busqueda = () => {\n  const useStyles = makeStyles(theme => ({\n    formControl: {\n      margin: theme.spacing(1),\n      minWidth: 300\n    },\n    selectEmpty: {\n      marginTop: theme.spacing(2)\n    },\n    submit: {\n      margin: theme.spacing(3, 0, 2),\n      backgroundColor: theme.palette.error.dark\n    },\n    button: {\n      margin: theme.spacing(1)\n    }\n  }));\n  const ColorButton = withStyles(theme => ({\n    root: {\n      color: theme.palette.getContrastText(green[500]),\n      backgroundColor: green[500],\n      '&:hover': {\n        backgroundColor: green[700]\n      }\n    }\n  }))(Button);\n  const StyledTableCell = withStyles(theme => ({\n    head: {\n      backgroundColor: theme.palette.error.light,\n      color: theme.palette.common.white,\n      size: 'small'\n    },\n    body: {\n      fontSize: 14\n    }\n  }))(TableCell);\n  const StyledTableRow = withStyles(theme => ({\n    root: {\n      '&:nth-of-type(odd)': {\n        backgroundColor: theme.palette.action.hover\n      }\n    }\n  }))(TableRow);\n  const classes = useStyles();\n\n  function getCurrentDate(separator = '/') {\n    let newDate = new Date();\n    let date = newDate.getDate();\n    let month = newDate.getMonth() + 1;\n    let year = newDate.getFullYear();\n    return `${date < 10 ? `0${date}` : `${date}`}${separator}${month < 10 ? `0${month}` : `${month}`}${separator}${year}`;\n  }\n\n  var fecha = getCurrentDate();\n  const history = useHistory();\n  const [age, setAge] = React.useState('');\n  const [mensaje, setMensaje] = useState([]);\n  const [selectedValue, setSelectedValue] = useState(null);\n  const dato = '';\n  const buscando = ' ';\n\n  const handleChange = event => {\n    setAge(event.target.value);\n    if (event.target.value == 1) setMensaje(\"Nota: El nombre del archivo se muestra por número de chasis.\");else if (event.target.value == 2) setMensaje(\"Nota: El nombre del archivo se muestra por número de factura.\");else setMensaje(\"\");\n\n    if (event.target.value == 2 || event.target.value == 8) {\n      const formData = [{\n        TipoBusqueda: \"Número Económico\"\n      }];\n      setRango(data2);\n      setBusqueda(formData);\n    } else if (event.target.value == 5) {\n      const formData = [{\n        TipoBusqueda: \"Rango Fecha\"\n      }];\n      setBusqueda(data2);\n      setRango(formData);\n    }\n    /*    else if(event.target.value == 6)\n        {\n          const formData = [{\n           TipoBusqueda:  \"Empresa Operadora\"\n          } ]\n    \n        setBusqueda(formData)\n        }*/\n    else {\n        setBusqueda(data2);\n        setRango(data2);\n      } //console.log(event.target.value)\n\n  };\n\n  const formatos = [\"Cedularti\", \"Cedulatra\", \"Consumo\", \"ConsumoEmpresa\", \"EstatusPatio\", \"Kilometraje\", \"PruebasDesempeño\", \"REFFA\", \"Rendimientos\", \"ReporteIncidencias\"];\n  const mesesArray = [\"Enero\", \"Febrero\", \"Marzo\", \"Abril\", \"Mayo\", \"Junio\", \"Julio\", \"Agosto\", \"Septiembre\", \"Octubre\", \"Noviembre\", \"Diciembre\"];\n  const [age2, setAge2] = React.useState('');\n  const [selectedValue2, setSelectedValue2] = useState(null);\n  const dato2 = '';\n\n  const handleChange2 = event => {\n    setAge2(event.target.value);\n  };\n\n  const fechaInput = useRef('');\n  const fechaInput2 = useRef('');\n  const archivo = useRef('');\n  const [data, setData] = useState([]);\n  const [data1, setData1] = useState([]);\n  const [data2, setData2] = useState([]);\n  const [data3, setData3] = useState([]);\n  const [TipoBusqueda, setBusqueda] = useState([]);\n  const [TipoFecha, setRango] = useState([]);\n  const [preload, setPreload] = useState(true);\n  const NumeroEcoRef = useRef('');\n\n  const Envio = async () => {\n    setData3(data2);\n    setData1(data2);\n    setData(data2); //console.log(\"Dato de Busqueda:\" + NumeroEcoRef.current.value)\n\n    if (archivo.current.value == 1) {\n      const _data = await getDataCedularti();\n\n      if (_data.data) {\n        //console.log(_data.data)    \n        setData3(_data.data); //console.log(data3[0])\n\n        setPreload(false);\n      } //buscando = \"Cedularti\"\n      //console.log(\"Data: \" + data);\n\n    } else if (archivo.current.value == 2) {\n      if (NumeroEcoRef.current.value) {\n        const _data = await getData(NumeroEcoRef.current.value);\n\n        if (_data.data) {\n          //console.log(_data.data)    \n          setData(_data.data);\n          setPreload(false);\n        } //buscando = \"Cedulatra\"\n\n      } else swal(\"¡Error!\", \"Ingrese el número económico.\", \"error\");\n    } else if (archivo.current.value == 3) {\n      let f = fechaInput.current.value;\n      let año = f.substring(0, 4);\n      f = f.substring(5, f.length);\n      let m = f.substring(0, f.indexOf('-'));\n      var meses = mesesArray[m - 1];\n      let expi = new Date(Number(new Date()) + 4 * 60 * 60000);\n      let formData = {\n        Mes: m,\n        Año: año,\n        route: \"/Consumo/ConsumoExcel\"\n      };\n      const esperaexcel = await EXCEL(formData);\n      const espera = await PDF(formData);\n\n      const _data = await getDataCon(); //console.log(_data)\n\n\n      if (_data.data) {\n        //console.log(_data.data)    \n        setData(_data.data);\n        setPreload(false);\n      } //console.log(\"Data incluye: \" + data);\n\n    } else if (archivo.current.value == 4) {\n      let f = fechaInput.current.value;\n      let año = f.substring(0, 4);\n      f = f.substring(5, f.length);\n      let m = f.substring(0, f.indexOf('-'));\n      var meses = mesesArray[m - 1];\n      let expi = new Date(Number(new Date()) + 4 * 60 * 60000);\n      let formData = {\n        Mes: meses,\n        Año: año,\n        route: \"/ConsumoE/ConsumoEExcel\"\n      };\n      const esperaexcel = await EXCEL(formData);\n      const espera = await EPDF(formData);\n\n      const _data = await getDataConsumoEmpresa();\n\n      if (_data.data) {\n        //console.log(_data.data)    \n        setData(_data.data);\n        setPreload(false);\n      }\n    } else if (archivo.current.value == 5) {\n      var meses = fechaInput.current.value;\n      var meses2 = fechaInput2.current.value;\n\n      if (meses2 < meses) {\n        let a = meses;\n        meses = meses2;\n        meses2 = a;\n      }\n\n      let formData = {};\n\n      if (meses2 && meses) {\n        if (meses2 == meses) {\n          formData = {\n            Fechadeliberacion: meses\n          };\n        } else {\n          //console.log(meses+ ' ' + meses2);\n          formData = {\n            Fechadeliberacion: meses,\n            FechaFin: meses2\n          };\n        }\n      } else if (meses2 && !meses) {\n        formData = {\n          Fechadeliberacion: meses2\n        };\n      } else {\n        formData = {\n          Fechadeliberacion: meses\n        };\n      }\n\n      swal({\n        title: \"Descarga de archivos.\",\n        text: \"Seleccione el tipo de archivo.\",\n        type: \"success\",\n        buttons: {\n          cancel: \"Cancelar\",\n          catch: {\n            text: \"PDF\",\n            value: \"pdf\"\n          },\n          catch1: {\n            text: \"EXCEL\",\n            value: \"excel\"\n          }\n        }\n      }).then(async value => {\n        //console.log(value)\n        switch (value) {\n          case \"pdf\":\n            swal({\n              title: \"¡Espere!\",\n              text: \"Generando PDF.\",\n              type: \"success\",\n              showConfirmButton: \"false\"\n            });\n            await sendFecha(formData).then(response => {\n              const timer = setTimeout(() => {\n                if (meses && meses2) downloadPDF('EstatusPatio' + meses + 'a' + meses2, 'estatusP/fetch-pdf');else if (meses && !meses2) downloadPDF('EstatusPatio' + meses, 'estatusP/fetch-pdf');else if (meses2 && !meses) downloadPDF('EstatusPatio' + meses2, 'estatusP/fetch-pdf');\n                swal(\"¡Listo!\", \"Se descargó tu pdf.\", \"success\");\n              }, 15000);\n            });\n            break;\n\n          case \"excel\":\n            swal({\n              title: \"¡Espere!\",\n              text: \"Generando Excel.\",\n              type: \"success\",\n              showConfirmButton: \"false\"\n            });\n            await sendFechaExcel(formData).then(response => {\n              const timer = setTimeout(() => {\n                if (meses && meses2) downloadExcel('EstatusPatio' + meses + 'a' + meses2, 'estatusP/fetch-excel');else if (meses && !meses2) downloadExcel('EstatusPatio' + meses, 'estatusP/fetch-excel');else if (meses2 && !meses) downloadExcel('EstatusPatio' + meses2, 'estatusP/fetch-excel');\n                swal(\"¡Listo!\", \"Se descargó tu Excel.\", \"success\");\n              }, 15000);\n            });\n            break;\n        }\n      });\n    } else if (archivo.current.value == 6) {\n      let f = fechaInput.current.value;\n      let año = f.substring(0, 4);\n      f = f.substring(5, f.length);\n      let m = f.substring(0, f.indexOf('-'));\n      var meses = mesesArray[m - 1]; //console.log(meses);\n\n      let formData = {\n        Año: año,\n        Mes: meses,\n        EmpresaOperadora: NumeroEcoRef.current.value,\n        route: \"/km/KilometrajeExcel\"\n      };\n      swal({\n        title: \"¡Espere!\",\n        text: \"Generando documentos.\",\n        type: \"success\"\n      });\n\n      const _data = await getDataKilometraje();\n\n      if (_data.data) {\n        //console.log(_data.data)    \n        setData(_data.data);\n        setPreload(false);\n      }\n\n      let espexcel = await EXCEL(formData);\n      let esp = await KPDF(formData);\n      swal(\"¡Listo!\", \"Puede descargar los pdf.\", \"success\");\n    } else if (archivo.current.value == 7) {\n      const _data = await getDataPruebas();\n\n      if (_data.data) {\n        //console.log(_data.data)    \n        setData1(_data.data);\n        setPreload(false);\n      }\n    } else if (archivo.current.value == 8) {\n      /*let info = {\n              NombrePDF: NumeroEcoRef.current.value,\n              Ruta: \"fotos/fetchPDF\",\n              RutaExcel: \"fotos/fetchExcel\"\n      }\n      let armado = [info]\n      setData(armado)/**/\n      swal({\n        title: \"Descarga de archivos.\",\n        text: \"Seleccione el tipo de archivo.\",\n        type: \"success\",\n        buttons: {\n          cancel: \"Cancelar\",\n          catch: {\n            text: \"PDF\",\n            value: \"pdf\"\n          },\n          catch1: {\n            text: \"EXCEL\",\n            value: \"excel\"\n          }\n        }\n      }).then(async value => {\n        //console.log(value)\n        switch (value) {\n          case \"pdf\":\n            swal({\n              title: \"¡Espere!\",\n              text: \"Generando PDF.\",\n              type: \"success\",\n              showConfirmButton: \"false\"\n            });\n            await downloadPDF(NumeroEcoRef.current.value, 'fotos/fetchPDF').then(respone => {\n              const timer = setTimeout(() => {\n                swal(\"¡Listo!\", \"Se descargó tu pdf.\", \"success\");\n              }, 1500);\n            });\n            break;\n\n          case \"excel\":\n            swal({\n              title: \"¡Espere!\",\n              text: \"Generando Excel.\",\n              type: \"success\",\n              showConfirmButton: \"false\"\n            });\n            await downloadExcel(NumeroEcoRef.current.value, 'fotos/fetchExcel').then(respone => {\n              const timer = setTimeout(() => {\n                swal(\"¡Listo!\", \"Se descargó tu excel.\", \"success\");\n              }, 1500);\n            });\n            break;\n        }\n      });\n      /**/\n    } else if (archivo.current.value == 9) {\n      //console.log(\"Buscando rendimientos\")\n      let f = fechaInput.current.value;\n      let año = f.substring(0, 4);\n      f = f.substring(5, f.length);\n      let m = f.substring(0, f.indexOf('-'));\n      var meses = mesesArray[m - 1];\n      let formData = {\n        Año: año,\n        Mes: meses,\n        route: \"/Rendimientos/RendimientosExcel\"\n      };\n      let espexcel = await EXCEL(formData);\n      let esp = await RPDF(formData);\n\n      const _data = await getDataRendimientos();\n\n      if (_data.data) {\n        //console.log(_data.data)    \n        setData(_data.data);\n        setPreload(false);\n      }\n    }\n  };\n\n  useEffect(() => {//función que va a cargar los datos\n  }, []);\n  return /*#__PURE__*/React.createElement(Container, {\n    component: \"main\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 489,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(CssBaseline, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 490,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.paper,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 491,\n      columnNumber: 9\n    }\n  }, \"Seleccione el tipo de formato y llene los campos a continuaci\\xF3n.\", /*#__PURE__*/React.createElement(FormControl, {\n    className: classes.paper,\n    align: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 496,\n      columnNumber: 2\n    }\n  }, /*#__PURE__*/React.createElement(InputLabel, {\n    htmlFor: \"age-native-simple\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 497,\n      columnNumber: 9\n    }\n  }, \"Tipo de formato.\"), /*#__PURE__*/React.createElement(Select, {\n    inputRef: archivo,\n    native: true,\n    onChange: handleChange,\n    inputProps: {\n      name: 'age',\n      id: 'age-native-simple'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 499,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"option\", {\n    \"aria-label\": \"None\",\n    value: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 504,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(\"option\", {\n    value: 1,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 505,\n      columnNumber: 11\n    }\n  }, \"C\\xE9dula de revisi\\xF3n t\\xE9cnica inicial del autob\\xFAs\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: 2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 506,\n      columnNumber: 11\n    }\n  }, \"C\\xE9dula t\\xE9cnica de registro del autob\\xFAs\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: 3,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 507,\n      columnNumber: 11\n    }\n  }, \"Consumo de combustible\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: 4,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 508,\n      columnNumber: 11\n    }\n  }, \"Consumo y mantenimiento\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: 5,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 509,\n      columnNumber: 11\n    }\n  }, \"Estatus de patio\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 510,\n      columnNumber: 11\n    }\n  }, \"Kilometraje\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: 7,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 511,\n      columnNumber: 11\n    }\n  }, \"Pruebas de desempe\\xF1o\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: 8,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 512,\n      columnNumber: 11\n    }\n  }, \"REFFA\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: 9,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 513,\n      columnNumber: 11\n    }\n  }, \"Rendimientos\")), TipoBusqueda.map(row => /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 517,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(TextField, {\n    label: row.TipoBusqueda,\n    inputRef: NumeroEcoRef,\n    id: \"TipoBusqueda\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 519,\n      columnNumber: 19\n    }\n  }))), /*#__PURE__*/React.createElement(TextField, {\n    htmlFor: \"age-native-simple\",\n    native: true,\n    onChange: handleChange2,\n    inputProps: {\n      name: 'age2',\n      id: 'age2-native-simple'\n    },\n    id: \"date\",\n    label: \"Fecha\",\n    type: \"date\",\n    inputRef: fechaInput,\n    defaultValue: fecha,\n    className: classes.textField,\n    InputLabelProps: {\n      shrink: true\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 524,\n      columnNumber: 9\n    }\n  }), TipoFecha.map(row => /*#__PURE__*/React.createElement(TextField, {\n    label: row.TipoFecha,\n    type: \"date\",\n    label: \"Fecha 2\",\n    inputRef: fechaInput2,\n    defaultValue: fecha,\n    id: \"TipoFecha\",\n    InputLabelProps: {\n      shrink: true\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 545,\n      columnNumber: 19\n    }\n  })), /*#__PURE__*/React.createElement(Button, {\n    type: \"submit\",\n    style: {\n      backgroundColor: '#992830',\n      width: '20%',\n      float: 'right'\n    },\n    variant: \"contained\",\n    color: \"primary\",\n    className: classes.submit,\n    onClick: Envio,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 555,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Search, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 562,\n      columnNumber: 13\n    }\n  })), \" \", /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 564,\n      columnNumber: 2\n    }\n  }, mensaje)), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 567,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(TableContainer, {\n    component: Paper,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 569,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Table, {\n    className: classes.table,\n    \"aria-label\": \"customized table\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 570,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(TableHead, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 571,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(TableRow, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 572,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(StyledTableCell, {\n    align: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 573,\n      columnNumber: 13\n    }\n  }, \"Nombre del PDF\"), /*#__PURE__*/React.createElement(StyledTableCell, {\n    align: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 574,\n      columnNumber: 13\n    }\n  }, \"Descargar\"))), /*#__PURE__*/React.createElement(TableBody, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 578,\n      columnNumber: 9\n    }\n  }, data.map(row => /*#__PURE__*/React.createElement(StyledTableRow, {\n    key: row.NombrePDF,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 580,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(StyledTableCell, {\n    align: \"center\",\n    component: \"th\",\n    scope: \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 581,\n      columnNumber: 15\n    }\n  }, row.NombrePDF), /*#__PURE__*/React.createElement(StyledTableCell, {\n    align: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 584,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    type: \"submit\",\n    variant: \"contained\",\n    color: \"Primary\",\n    className: classes.button,\n    startIcon: /*#__PURE__*/React.createElement(AssignmentIcon, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 601,\n        columnNumber: 48\n      }\n    }),\n    onClick: () => {\n      downloadPDF(row.NombrePDF, row.Ruta);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 596,\n      columnNumber: 18\n    }\n  }, \"PDF\"), /*#__PURE__*/React.createElement(Button, {\n    type: \"submit\",\n    variant: \"contained\",\n    color: \"secondary\",\n    className: classes.button,\n    startIcon: /*#__PURE__*/React.createElement(BarChartIcon, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 613,\n        columnNumber: 48\n      }\n    }),\n    onClick: () => {\n      downloadExcel(row.NombrePDF, row.RutaExcel); //downloadPDF(row.NombrePDF,row.Ruta)\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 608,\n      columnNumber: 27\n    }\n  }, \"Excel\")))), data1.map(row => /*#__PURE__*/React.createElement(StyledTableRow, {\n    key: row.NombrePDF,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 627,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(StyledTableCell, {\n    align: \"center\",\n    component: \"th\",\n    scope: \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 628,\n      columnNumber: 21\n    }\n  }, row.NombrePDF), /*#__PURE__*/React.createElement(StyledTableCell, {\n    align: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 631,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    type: \"submit\",\n    variant: \"contained\",\n    color: \"Primary\",\n    className: classes.button,\n    startIcon: /*#__PURE__*/React.createElement(AssignmentIcon, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 637,\n        columnNumber: 48\n      }\n    }),\n    onClick: () => {\n      downloadPDFP(row); //downloadPDF(row.NombrePDF,row.Ruta)\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 632,\n      columnNumber: 21\n    }\n  }, \"PDF\"), /*#__PURE__*/React.createElement(Button, {\n    type: \"submit\",\n    variant: \"contained\",\n    color: \"secondary\",\n    className: classes.button,\n    startIcon: /*#__PURE__*/React.createElement(BarChartIcon, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 650,\n        columnNumber: 48\n      }\n    }),\n    onClick: () => {\n      downloadExcelP(row); //downloadExcel(row.NombrePDF,row.RutaExcel)\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 645,\n      columnNumber: 27\n    }\n  }, \"Excel\")))), data3.map(row => /*#__PURE__*/React.createElement(StyledTableRow, {\n    key: row.NombrePDF,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 664,\n      columnNumber: 23\n    }\n  }, /*#__PURE__*/React.createElement(StyledTableCell, {\n    align: \"center\",\n    component: \"th\",\n    scope: \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 665,\n      columnNumber: 25\n    }\n  }, row.NombrePDF), /*#__PURE__*/React.createElement(StyledTableCell, {\n    align: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 668,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    type: \"submit\",\n    variant: \"contained\",\n    color: \"Primary\",\n    className: classes.button,\n    startIcon: /*#__PURE__*/React.createElement(AssignmentIcon, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 685,\n        columnNumber: 48\n      }\n    }),\n    onClick: () => {\n      downloadPDFR(row);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 680,\n      columnNumber: 27\n    }\n  }, \"PDF\"), /*#__PURE__*/React.createElement(Button, {\n    type: \"submit\",\n    variant: \"contained\",\n    color: \"secondary\",\n    className: classes.button,\n    startIcon: /*#__PURE__*/React.createElement(BarChartIcon, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 697,\n        columnNumber: 48\n      }\n    }),\n    onClick: () => {\n      downloadExcel(row.NombrePDF, row.RutaExcel); //downloadPDFR(row)\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 692,\n      columnNumber: 27\n    }\n  }, \"Excel\")))))))));\n};\n\nexport default withRouter(Busqueda);","map":{"version":3,"sources":["/home/ubuntu/TTB012_MB/FrontEnd/src/componentes/paginas/formatos/Busqueda.jsx"],"names":["React","useState","useRef","useEffect","withStyles","makeStyles","Table","TableBody","TableCell","ArrowDownwardIcon","TableContainer","TableHead","TableRow","Paper","Button","CloudUploadIcon","KeyboardVoiceIcon","Icon","SaveIcon","green","purple","Grid","Box","withRouter","InputLabel","MenuItem","FormHelperText","FormControl","Select","CssBaseline","Typography","Container","IconButton","DeleteIcon","BarChartIcon","AssignmentIcon","TextField","Input","useHistory","EXCEL","downloadPDF","downloadExcelP","downloadPDFP","downloadExcel","getData","getDataCedularti","downloadPDFR","getDataCon","PDF","sendFecha","sendFechaExcel","getDataConsumoEmpresa","EPDF","getDataKilometraje","KPDF","getDataPruebas","getDataRendimientos","RPDF","swal","Search","Busqueda","useStyles","theme","formControl","margin","spacing","minWidth","selectEmpty","marginTop","submit","backgroundColor","palette","error","dark","button","ColorButton","root","color","getContrastText","StyledTableCell","head","light","common","white","size","body","fontSize","StyledTableRow","action","hover","classes","getCurrentDate","separator","newDate","Date","date","getDate","month","getMonth","year","getFullYear","fecha","history","age","setAge","mensaje","setMensaje","selectedValue","setSelectedValue","dato","buscando","handleChange","event","target","value","formData","TipoBusqueda","setRango","data2","setBusqueda","formatos","mesesArray","age2","setAge2","selectedValue2","setSelectedValue2","dato2","handleChange2","fechaInput","fechaInput2","archivo","data","setData","data1","setData1","setData2","data3","setData3","TipoFecha","preload","setPreload","NumeroEcoRef","Envio","current","_data","f","año","substring","length","m","indexOf","meses","expi","Number","Mes","Año","route","esperaexcel","espera","meses2","a","Fechadeliberacion","FechaFin","title","text","type","buttons","cancel","catch","catch1","then","showConfirmButton","response","timer","setTimeout","EmpresaOperadora","espexcel","esp","respone","paper","name","id","map","row","textField","shrink","width","float","table","NombrePDF","Ruta","RutaExcel"],"mappings":"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","sourcesContent":["import React, {useState, useRef, useEffect} from 'react'\nimport { withStyles, makeStyles } from '@material-ui/core/styles';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport ArrowDownwardIcon from '@material-ui/icons/ArrowDownward';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\nimport Button from '@material-ui/core/Button';\nimport CloudUploadIcon from '@material-ui/icons/CloudUpload';\nimport KeyboardVoiceIcon from '@material-ui/icons/KeyboardVoice';\nimport Icon from '@material-ui/core/Icon';\nimport SaveIcon from '@material-ui/icons/Save';\nimport { green, purple } from '@material-ui/core/colors';\nimport {Grid,Box}  from '@material-ui/core/';\nimport { withRouter } from 'react-router-dom';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport FormHelperText from '@material-ui/core/FormHelperText';\nimport FormControl from '@material-ui/core/FormControl';\nimport Select from '@material-ui/core/Select';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Typography from '@material-ui/core/Typography';\nimport Container from '@material-ui/core/Container';\nimport IconButton from '@material-ui/core/IconButton';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport BarChartIcon from '@material-ui/icons/BarChart';\nimport AssignmentIcon from '@material-ui/icons/Assignment';\nimport TextField from '@material-ui/core/TextField';\nimport Input from '@material-ui/core/Input';\nimport { useHistory } from \"react-router-dom\";\nimport {EXCEL,downloadPDF,downloadExcelP,downloadPDFP,downloadExcel} from '../../Functions/Busqueda';\nimport {getData} from '../../Functions/CedulaTRAFunctions';\nimport {getDataCedularti,downloadPDFR} from '../../Functions/RevTecnicaInicial';\nimport {getDataCon,PDF} from '../../Functions/Consumo';\nimport {sendFecha,sendFechaExcel} from '../../Functions/EstatusPatio';\nimport {getDataConsumoEmpresa,EPDF} from '../../Functions/ConsumoEmpresa';\nimport {getDataKilometraje,KPDF} from '../../Functions/Kilometraje'; \nimport {getDataPruebas} from '../../Functions/PruebasDeDesempeños';\nimport {getDataRendimientos,RPDF} from '../../Functions/Rendimientos';\nimport swal from \"sweetalert\";\nimport Search from \"@material-ui/icons/Search\";   \n\n\nconst Busqueda = () => {\n  const useStyles = makeStyles((theme) => ({\n    formControl: {\n      margin: theme.spacing(1),\n      minWidth: 300,\n    },\n    selectEmpty: {\n      marginTop: theme.spacing(2),\n    },\n    submit: {\n          margin: theme.spacing(3, 0, 2),\n          backgroundColor: theme.palette.error.dark,\n        },\n        button: {\n          margin: theme.spacing(1),\n        },\n  }));\n\n  const ColorButton = withStyles((theme) => ({\n    root: {\n      color: theme.palette.getContrastText(green[500]),\n      backgroundColor: green[500],\n      '&:hover': {\n        backgroundColor: green[700],\n      },\n    },\n  }))(Button);\n\n  const StyledTableCell = withStyles((theme) => ({\n    head: {\n      backgroundColor: theme.palette.error.light,\n      color: theme.palette.common.white,\n      size:  'small',\n\n    },\n    body: {\n      fontSize: 14,\n    },\n  }))(TableCell);\n\n  const StyledTableRow = withStyles((theme) => ({\n    root: {\n      '&:nth-of-type(odd)': {\n        backgroundColor: theme.palette.action.hover,\n      },\n    },\n  }))(TableRow);\n\n  const classes = useStyles();           \n  \n  function getCurrentDate(separator='/'){\n    let newDate = new Date()\n    let date = newDate.getDate();\n    let month = newDate.getMonth() + 1;\n    let year = newDate.getFullYear();\n\n    return `${date<10?`0${date}`:`${date}`}${separator}${month<10?`0${month}`:`${month}`}${separator}${year}`\n  }\n  var fecha = getCurrentDate();     \n  const history = useHistory();\n    \n  const [age, setAge] = React.useState('');\n  const [mensaje,setMensaje] = useState([]);\n  const [selectedValue, setSelectedValue]= useState(null);\n  const dato = '';\n  const buscando = ' '\n\n  const handleChange = (event) => {\n    setAge(event.target.value)\n    if(event.target.value == 1)\n\tsetMensaje(\"Nota: El nombre del archivo se muestra por número de chasis.\")\n    else if(event.target.value == 2)\n\tsetMensaje(\"Nota: El nombre del archivo se muestra por número de factura.\")\n    else\n\tsetMensaje(\"\")\n    if(event.target.value == 2 || event.target.value == 8 )\n    {\n        const formData = [{\n          TipoBusqueda:  \"Número Económico\"\n        } ]\n        setRango(data2)\n        setBusqueda(formData)\n    }\n    else if(event.target.value == 5)\n    {\n        const formData = [{\n          TipoBusqueda:  \"Rango Fecha\"\n        } ]\n        setBusqueda(data2)\n        setRango(formData)\n    }\n/*    else if(event.target.value == 6)\n    {\n      const formData = [{\n       TipoBusqueda:  \"Empresa Operadora\"\n      } ]\n\n    setBusqueda(formData)\n    }*/\n    else\n  \t{\n      setBusqueda(data2)\n      setRango(data2)\n  \t}    \n    //console.log(event.target.value)\n  };\n\n  const formatos = [\"Cedularti\",\"Cedulatra\",\"Consumo\",\"ConsumoEmpresa\",\"EstatusPatio\",\"Kilometraje\",\"PruebasDesempeño\",\"REFFA\",\"Rendimientos\",\"ReporteIncidencias\"]\n  const mesesArray = [\"Enero\", \"Febrero\", \"Marzo\", \"Abril\", \"Mayo\", \"Junio\", \"Julio\", \"Agosto\", \"Septiembre\", \"Octubre\", \"Noviembre\", \"Diciembre\"]\n\n  const [age2, setAge2] = React.useState('');\n  const [selectedValue2, setSelectedValue2]= useState(null);\n  const dato2 = '';\n\n  const handleChange2 = (event) => {\n    setAge2(event.target.value);  \n  };    \n   const fechaInput = useRef('');\n   const fechaInput2 = useRef('');\n   const archivo = useRef('');\n\n   const [data, setData] = useState([]);\n   const [data1, setData1] = useState([]); \n   const [data2, setData2] = useState([]);\n   const [data3, setData3] = useState([]);\n   const [TipoBusqueda, setBusqueda] = useState([]);\n   const [TipoFecha, setRango] = useState([]);\n   const [preload, setPreload] = useState(true); \n   const NumeroEcoRef = useRef('')  \n\n  const Envio = async() =>{\n    setData3(data2)\n    setData1(data2)\n    setData(data2)   \n   \n    //console.log(\"Dato de Busqueda:\" + NumeroEcoRef.current.value)\n    if(archivo.current.value == 1)\n    {\n      const _data = await getDataCedularti()\n      if(_data.data)\n      {\n          //console.log(_data.data)    \n          setData3(_data.data)\n          //console.log(data3[0])\n          setPreload(false)      \n      }\n\t//buscando = \"Cedularti\"\n      //console.log(\"Data: \" + data);\n    }\n    else if(archivo.current.value == 2)\n    {\n      if(NumeroEcoRef.current.value)\n      {\n        const _data = await getData(NumeroEcoRef.current.value)\n        if(_data.data)\n        {\n          //console.log(_data.data)    \n          setData(_data.data)\n          setPreload(false)      \n        }\n\t//buscando = \"Cedulatra\"\n      }\n      else\n        swal(\"¡Error!\",\"Ingrese el número económico.\",\"error\")\n    }\n    else if(archivo.current.value == 3)\n    {\n      let f = fechaInput.current.value\n      let año = f.substring(0,4)\n      f = f.substring(5,f.length)\n      let m = f.substring(0,f.indexOf('-'))\n      var meses = mesesArray[m-1]\n      let expi = new Date(Number(new Date()) + (4 * 60 * 60000) )\n      let formData = {\n      \tMes: m,\n      \tAño: año,\n\troute: \"/Consumo/ConsumoExcel\"\n      }\n      const esperaexcel = await EXCEL(formData);\n      const espera = await PDF(formData);\n      const _data = await getDataCon()\n      //console.log(_data)\n      if(_data.data)\n      {\n        //console.log(_data.data)    \n        setData(_data.data)\n        setPreload(false)              \n      }\n      //console.log(\"Data incluye: \" + data);\n    }\n    else if(archivo.current.value == 4)\n    {\n      let f = fechaInput.current.value\n      let año = f.substring(0,4)\n      f = f.substring(5,f.length)\n      let m = f.substring(0,f.indexOf('-'))\n      var meses = mesesArray[m-1]\n      let expi = new Date(Number(new Date()) + (4 * 60 * 60000) )\n      let formData = {\n        Mes: meses,\n        Año: año,\n        route: \"/ConsumoE/ConsumoEExcel\"\n      }\n      const esperaexcel = await EXCEL(formData);\n      const espera = await EPDF(formData);\n      const _data = await getDataConsumoEmpresa()\n      if(_data.data){\n        //console.log(_data.data)    \n        setData(_data.data)\n        setPreload(false)      \n      }\n    }\n    else if(archivo.current.value == 5)\n    {\n      var meses = fechaInput.current.value;    \n      var meses2 = fechaInput2.current.value;\n    \tif(meses2 < meses)\n    \t{\n    \t\tlet a = meses\n    \t\tmeses = meses2\n    \t\tmeses2 = a\n    \t}\n      let formData = {}\n      if(meses2 && meses)\n\t    {\n    \t\tif(meses2 == meses)\n    \t\t{\n    \t\t\tformData = {\n            Fechadeliberacion: meses,\n          }\n    \t\t}\n    \t\telse\n    \t\t{\n    \t\t\t//console.log(meses+ ' ' + meses2);\n    \t      formData = {\n    \t\t      Fechadeliberacion: meses,\n    \t\t\t\t  FechaFin: meses2\n          \t}\n    \t\t}\n\t    }\n      else if(meses2 && !meses)\n    \t{\n    \t\tformData = {\n          Fechadeliberacion: meses2,         \n        }\n    \t}\n      else\n    \t{\n    \t\tformData = {\n          Fechadeliberacion: meses,\n        }\n    \t}\n    \tswal({\n        title: \"Descarga de archivos.\",\n        text: \"Seleccione el tipo de archivo.\",\n        type: \"success\",\n        buttons:{\n\t        cancel: \"Cancelar\",\n          catch:{\n            text: \"PDF\",\n            value: \"pdf\"\n          },\n          catch1:{\n            text: \"EXCEL\",\n            value: \"excel\"\n          },\n        }\n      }).then( async (value) => {\t\n          //console.log(value)\n          switch(value){\n            case \"pdf\":\n              swal({\n                title: \"¡Espere!\",\n                text: \"Generando PDF.\",\n                type: \"success\",\n              \tshowConfirmButton: \"false\"\n              });\n              await sendFecha(formData).then(response =>{\n                const timer = setTimeout(() => {\n                  if(meses && meses2)\n                    downloadPDF('EstatusPatio'+meses+'a'+meses2,'estatusP/fetch-pdf')\n                  else if(meses && !meses2)\n                    downloadPDF('EstatusPatio'+meses,'estatusP/fetch-pdf')\n                  else if(meses2 && !meses)\n                    downloadPDF('EstatusPatio'+meses2,'estatusP/fetch-pdf')\n                  swal(\"¡Listo!\",\"Se descargó tu pdf.\",\"success\")\n                  }, 15000);\n                })\n            break;\n            case \"excel\":\n              swal({\n      \t        title: \"¡Espere!\",\n      \t        text: \"Generando Excel.\",\n      \t        type: \"success\",\n      \t        showConfirmButton: \"false\"\n              });\n              await sendFechaExcel(formData).then(response =>{\n                const timer = setTimeout(() => {\n                  if(meses && meses2)\n                          downloadExcel('EstatusPatio'+meses+'a'+meses2,'estatusP/fetch-excel')\n                  else if(meses && !meses2)\n                          downloadExcel('EstatusPatio'+meses,'estatusP/fetch-excel')\n                  else if(meses2 && !meses)\n                          downloadExcel('EstatusPatio'+meses2,'estatusP/fetch-excel')\n                  swal(\"¡Listo!\",\"Se descargó tu Excel.\",\"success\")\n                }, 15000);\n          \n              })\n            break;  \n        }\n      })\n\n    }\n    else if(archivo.current.value == 6)\n    {\n        let f = fechaInput.current.value\n        let año = f.substring(0,4)\n        f = f.substring(5,f.length)\n        let m = f.substring(0,f.indexOf('-'))\n        var meses = mesesArray[m-1]\n        //console.log(meses);\n        let formData = {\n          Año: año,\n          Mes: meses,\n          EmpresaOperadora: NumeroEcoRef.current.value,\n          route: \"/km/KilometrajeExcel\"\n        }\n        swal({\n          title: \"¡Espere!\",\n          text: \"Generando documentos.\",\n          type: \"success\"\n        });\n        const _data = await getDataKilometraje()\n        if(_data.data)\n        {\n          //console.log(_data.data)    \n          setData(_data.data)\n          setPreload(false)      \n        } \n        let espexcel =  await EXCEL(formData)\n        let esp =  await KPDF(formData)  \n        swal(\"¡Listo!\",\"Puede descargar los pdf.\",\"success\")                              \n    }\n    else if(archivo.current.value == 7)\n    {\n      const _data = await getDataPruebas()\n      if(_data.data)\n      {\n        //console.log(_data.data)    \n        setData1(_data.data)\n        setPreload(false)      \n      }      \n    }\n    else if(archivo.current.value == 8)\n    {\n      /*let info = {\n              NombrePDF: NumeroEcoRef.current.value,\n              Ruta: \"fotos/fetchPDF\",\n              RutaExcel: \"fotos/fetchExcel\"\n      }\n      let armado = [info]\n      setData(armado)/**/\n      swal({\n        title: \"Descarga de archivos.\",\n        text: \"Seleccione el tipo de archivo.\",\n        type: \"success\",\n        buttons:{\n          cancel: \"Cancelar\",\n          catch:{\n            text: \"PDF\",\n            value: \"pdf\"\n          },\n          catch1:{\n            text: \"EXCEL\",\n            value: \"excel\"\n          },\n        }\n      }).then( async (value) => { \n        //console.log(value)\n        switch(value)\n        {\n          case \"pdf\":\n            swal({\n              title: \"¡Espere!\",\n              text: \"Generando PDF.\",\n              type: \"success\",\n              showConfirmButton: \"false\"\n            });\n            await(downloadPDF(NumeroEcoRef.current.value,'fotos/fetchPDF')).then(respone => {\n              const timer = setTimeout(() => {            \n                swal(\"¡Listo!\",\"Se descargó tu pdf.\",\"success\")\n              }, 1500);\n\t          })\n          break;\n          case \"excel\":\n            swal({\n              title: \"¡Espere!\",\n              text: \"Generando Excel.\",\n              type: \"success\",\n              showConfirmButton: \"false\"\n            });\n            await(downloadExcel(NumeroEcoRef.current.value,'fotos/fetchExcel')).then(respone => {\n              const timer = setTimeout(() => {            \n                swal(\"¡Listo!\",\"Se descargó tu excel.\",\"success\")\n              }, 1500);\n            })    \n\t        break;  \n        }\n      })/**/\n    }\n    else if(archivo.current.value == 9)\n    {\n      //console.log(\"Buscando rendimientos\")\n      let f = fechaInput.current.value\n      let año = f.substring(0,4)\n      f = f.substring(5,f.length)\n      let m = f.substring(0,f.indexOf('-'))\n      var meses = mesesArray[m-1]\n      let formData = {\n        Año: año,\n        Mes: meses,\n        route: \"/Rendimientos/RendimientosExcel\"\n      }\n      let espexcel = await EXCEL(formData)\n      let esp = await RPDF(formData)\n      const _data = await getDataRendimientos()\n      if(_data.data)\n      {\n        //console.log(_data.data)    \n        setData(_data.data)\n        setPreload(false)      \n      }  \n    }\n  }\n\n  \n  useEffect(() => {\n    //función que va a cargar los datos\n  }, []);\n\n    return (       \n     \n      <Container component=\"main\">\n      <CssBaseline />\n        <div className={classes.paper}>\n        \n\tSeleccione el tipo de formato y llene los campos a continuación.\n\t{/*<br/><br/><br/><br/>*/}        \n\t\t\n\t<FormControl className={classes.paper} align='center'>\n        <InputLabel htmlFor=\"age-native-simple\">Tipo de formato.</InputLabel>\n\t\n        <Select inputRef = {archivo} native onChange={handleChange} inputProps={{\n             name: 'age',\n             id: 'age-native-simple',             \n           }}\n        >\n          <option aria-label=\"None\" value=\"\" />\n          <option value={1}>Cédula de revisión técnica inicial del autobús</option>\n          <option value={2}>Cédula técnica de registro del autobús</option>\n          <option value={3}>Consumo de combustible</option>\n          <option value={4}>Consumo y mantenimiento</option>\n          <option value={5}>Estatus de patio</option>\n          <option value={6}>Kilometraje</option>\n          <option value={7}>Pruebas de desempeño</option>\n          <option value={8}>REFFA</option>\n          <option value={9}>Rendimientos</option>          \n          \n        </Select>\n      {TipoBusqueda.map((row) => (\n                  <div>\n                      \n                  <TextField label={row.TipoBusqueda}   inputRef={NumeroEcoRef} id=\"TipoBusqueda\" />\n                  </div>\n      ))}\n        \n\n        <TextField  \n\n            htmlFor=\"age-native-simple\"\n            native              \n           onChange={handleChange2}\n           inputProps={{\n             name: 'age2',\n             id: 'age2-native-simple',\n           }}\n\n            id=\"date\"\n            label=\"Fecha\"\n            type=\"date\"\n            inputRef = {fechaInput}\n            defaultValue={fecha}\n            className={classes.textField}\n            InputLabelProps={{shrink: true,}}\n          />  \n\n{TipoFecha.map((row) => (\n                  \n                  <TextField label={row.TipoFecha} \n                  type=\"date\"\n\t\t  label=\"Fecha 2\"\n                  inputRef = {fechaInput2}\n                  defaultValue={fecha} \n                  id=\"TipoFecha\"\n                  InputLabelProps={{shrink: true,}} />\n                  \n      ))} \n\n        <Button\n            type=\"submit\"\n            style= {{backgroundColor:'#992830', width:'20%', float:'right'}}\n            variant=\"contained\"\n            color=\"primary\"\n            className={classes.submit}\n            onClick={Envio}>\n            <Search />\n          </Button> {/* Finaliza \"Buscar.\" */}\n\t<p>{mensaje}</p>\n      </FormControl>  \n\n      <br/>    \n\n      <TableContainer component={Paper}>\n      <Table className={classes.table} aria-label=\"customized table\">\n        <TableHead>\n          <TableRow>\n            <StyledTableCell align=\"center\">Nombre del PDF</StyledTableCell>\n            <StyledTableCell align=\"center\">Descargar</StyledTableCell>            \n            \n          </TableRow>\n        </TableHead>\n        <TableBody>\n          {data.map((row) => (\n            <StyledTableRow key={row.NombrePDF}>\n              <StyledTableCell align=\"center\" component=\"th\" scope=\"row\">\n                {row.NombrePDF}                \n              </StyledTableCell>              \n              <StyledTableCell align=\"center\">\n              {/* <Button\n                    type=\"submit\"\n                    width= \"25%\"\n                    align= \"right\"\n                    variant=\"contained\"\n                    className={classes.submit}\n                    onClick={() => {                                    \n                        downloadPDF(row.NombrePDF,row.Ruta)\n                      }}>\n                    Descar\n                </Button> */}\n                 <Button\n                                    type=\"submit\"\n                                    variant=\"contained\"\n                                    color=\"Primary\"\n                                    className={classes.button}\n                                    startIcon={<AssignmentIcon />}\n                                    onClick={() => {\n                                      downloadPDF(row.NombrePDF,row.Ruta)\n                                    }}\n                          >\n                              PDF\n                          </Button>\n                          <Button\n                                    type=\"submit\"\n                                    variant=\"contained\"\n                                    color=\"secondary\"\n                                    className={classes.button}\n                                    startIcon={<BarChartIcon />}\n                                    onClick={() => {\n                              \t\tdownloadExcel(row.NombrePDF,row.RutaExcel)\n\t\t\t\t        //downloadPDF(row.NombrePDF,row.Ruta)\n                                    }}\n                                    \n                          >\n                              Excel\n                          </Button>\n                </StyledTableCell>\n              \n            </StyledTableRow>\n          ))}\n      \t  {data1.map((row) => (\n                  <StyledTableRow key={row.NombrePDF}>\n                    <StyledTableCell align=\"center\" component=\"th\" scope=\"row\">\n                      {row.NombrePDF}\n                    </StyledTableCell>\n                    <StyledTableCell align=\"center\">\n                    <Button\n                                    type=\"submit\"\n                                    variant=\"contained\"\n                                    color=\"Primary\"\n                                    className={classes.button}\n                                    startIcon={<AssignmentIcon />}\n                                    onClick={() => {\n                                      downloadPDFP(row)\n\t\t\t\t      //downloadPDF(row.NombrePDF,row.Ruta)\n                                    }}\n                          >\n                              PDF\n                          </Button>\n                          <Button\n                                    type=\"submit\"\n                                    variant=\"contained\"\n                                    color=\"secondary\"\n                                    className={classes.button}\n                                    startIcon={<BarChartIcon />}\n                                    onClick={() => {\n                                      \tdownloadExcelP(row)\n\t\t\t\t\t//downloadExcel(row.NombrePDF,row.RutaExcel)\n\t\t\t\t\t\n                                    }}\n                                   \n                          >\n                              Excel\n                          </Button></StyledTableCell>\n\n                  </StyledTableRow>\n                ))}\n          \t{data3.map((row) => (\n                      <StyledTableRow key={row.NombrePDF}>\n                        <StyledTableCell align=\"center\" component=\"th\" scope=\"row\">\n                          {row.NombrePDF}\n                        </StyledTableCell>\n                        <StyledTableCell align=\"center\">\n                        {/* <Button\n                              type=\"submit\"\n                              width= \"25%\"\n                              align= \"right\"\n                              variant=\"contained\"\n                              className={classes.submit}\n                              onClick={() => {\n                                  downloadPDFR(row)\n                                }}>\n                              Descargar PDF\n                          </Button> */}\n                          <Button\n                                    type=\"submit\"\n                                    variant=\"contained\"\n                                    color=\"Primary\"\n                                    className={classes.button}\n                                    startIcon={<AssignmentIcon />}\n                                    onClick={() => {\n                                      downloadPDFR(row)\n                                    }}\n                          >\n                              PDF\n                          </Button>\n                          <Button\n                                    type=\"submit\"\n                                    variant=\"contained\"\n                                    color=\"secondary\"\n                                    className={classes.button}\n                                    startIcon={<BarChartIcon />}\n                                    onClick={() => {\n                              \t\tdownloadExcel(row.NombrePDF,row.RutaExcel)\n\t\t\t\t        //downloadPDFR(row)\n                                    }}\n                                    \n                          >\n                              Excel\n                          </Button>\n                          </StyledTableCell>\n\n                      </StyledTableRow>\n                    ))}\n        </TableBody>\n      </Table>\n    </TableContainer>\n\n    </div>\n  </Container>\n    );\n}\n \nexport default withRouter(Busqueda);\n"]},"metadata":{},"sourceType":"module"}