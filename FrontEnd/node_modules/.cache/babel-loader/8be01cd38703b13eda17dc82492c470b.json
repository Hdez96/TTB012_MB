{"ast":null,"code":"import axios from 'axios';\nimport { saveAs } from 'file-saver';\nexport const getData = url => {\n  return axios.post(\"/reffa/get_Codigo\").then(resp => {\n    //console.log(resp.data.data)\n    return {\n      success: true,\n      data: resp.data.data\n    };\n  }).catch(err => {\n    console.log(\"Error al cargar los datos de >: \" + url + \" error \" + err);\n    return {\n      success: false\n    };\n  });\n};\nexport const getFallos = newForm => {\n  return axios.post(newForm.URL, {\n    NumeroEconomico: newForm.NumeroEconomico\n  }).then(resp => {\n    return {\n      success: true,\n      data: resp.data.data\n    };\n  }).catch(err => {\n    console.log(\"Error al cargar los datos de >: \" + newForm.URL + \" error \" + err);\n    return {\n      success: false\n    };\n  });\n};\nexport const getReffa = url => {\n  return axios.post(url).then(resp => {\n    //console.log(resp.data.data)\n    return {\n      success: true,\n      data: resp.data.data\n    };\n  }).catch(err => {\n    console.log(\"Error al cargar los datos de >: \" + url + \" error \" + err);\n    return {\n      success: false\n    };\n  });\n};\nexport const getHeader = url => {\n  return axios.post(url).then(resp => {\n    return {\n      success: true,\n      data: resp.data.data\n    };\n  }).catch(err => {\n    console.log(\"Error al cargar los datos de >: \" + url + \" error \" + err);\n    return {\n      success: false\n    };\n  });\n};\nexport const updateHeader = newForm => {\n  console.log(newForm);\n  return axios.post('fotos/updateheader', {\n    NumeroEconomico: newForm.NumeroEconomico,\n    Foto: newForm.Foto,\n    Codigo: newForm.Codigo,\n    Fecha: newForm.Fecha\n  }).then(response => {\n    console.log('Datos enviados.');\n  }).catch(err => {\n    console.log(\"Datos NO enviados.\\n\" + err);\n  });\n};\nexport const sendFoto = newForm => {\n  console.log(newForm);\n  return axios.post('fotos/fotos', {\n    NumeroEconomico: newForm.NumeroEconomico,\n    Foto: newForm.Foto,\n    Codigo: newForm.Codigo,\n    Fecha: newForm.Fecha\n  }).then(response => {\n    console.log('Datos enviados.');\n  }).catch(err => {\n    console.log(\"Datos NO enviados.\\n\" + err);\n  });\n};\nexport const sendCodes = newForm => {\n  console.log(newForm);\n  return axios.post('fallos/anexoT', {\n    NumeroEconomico: newForm.NumeroEconomico,\n    Codigo: newForm.Codigos,\n    Elemento: newForm.Elemento,\n    Estatus: newForm.Estatus,\n    Detalle: newForm.Detalle,\n    Ubicaciones: newForm.Localizacion,\n    Observaciones: newForm.Observaciones,\n    Fecha: newForm.Fecha\n  }).then(response => {\n    console.log('Datos enviados.');\n  }).catch(err => {\n    console.log(\"Datos NO enviados.\\n\" + err);\n  });\n};\nexport const sendData = newForm => {\n  return axios.post('reffa/reffaT', {\n    NumeroEconomico: newForm.NumeroEconomico,\n    EmpresaOperadora: newForm.EmpresaOperadora,\n    Kilometraje: newForm.Kilometraje,\n    A単o: newForm.A単oR,\n    NoMotor: newForm.NoMotorR,\n    NoChasis: newForm.NoChasisR,\n    NoTransmision: newForm.NoTransmision,\n    Marca: newForm.MarcaR,\n    Modelo: newForm.ModeloR,\n    Placas: newForm.PlacasR,\n    FechaUltimoMantenimiento: newForm.FechaUltimoMantenimiento,\n    Verificacion: newForm.Verificacion,\n    ConsumoPromedio: newForm.ConsumoPromedio,\n    FechaFumigacion: newForm.FechaFumigacion,\n    NotaExtra: newForm.NotaExtra,\n    Cargo: newForm.Cargo,\n    Fecha: newForm.Fecha,\n    Nombre: newForm.Nombre,\n    Hora: newForm.Hora\n  }).then(response => {\n    console.log('Datos enviados.');\n  }).catch(err => {\n    console.log(\"Datos NO enviados.\\n\" + err);\n  });\n};\nexport const sendElaboration = newForm => {\n  console.log(newForm);\n  return axios.post('personarecepcion/personaR', {\n    Nombre: newForm.Nombre,\n    Fecha: newForm.Fecha,\n    Hora: newForm.Hora,\n    NumeroEconomico: newForm.NumeroEconomico\n  }).then(response => {\n    console.log('Datos enviados.');\n  }).catch(err => {\n    console.log(\"Datos NO enviados.\\n\" + err);\n  });\n};\nexport function downloadPDF(name, route) {\n  let dir = name;\n  return axios.get(route, {\n    params: {\n      PDF: dir\n    },\n    responseType: 'blob'\n  }).then(res => {\n    const pdfBlob = new Blob([res.data], {\n      type: 'application/pdf'\n    });\n    saveAs(pdfBlob, name + '.pdf');\n  });\n}","map":{"version":3,"sources":["/home/ubuntu/TTB012_MB/FrontEnd/src/componentes/Functions/Codigos_REFFA.js"],"names":["axios","saveAs","getData","url","post","then","resp","success","data","catch","err","console","log","getFallos","newForm","URL","NumeroEconomico","getReffa","getHeader","updateHeader","Foto","Codigo","Fecha","response","sendFoto","sendCodes","Codigos","Elemento","Estatus","Detalle","Ubicaciones","Localizacion","Observaciones","sendData","EmpresaOperadora","Kilometraje","A単o","A単oR","NoMotor","NoMotorR","NoChasis","NoChasisR","NoTransmision","Marca","MarcaR","Modelo","ModeloR","Placas","PlacasR","FechaUltimoMantenimiento","Verificacion","ConsumoPromedio","FechaFumigacion","NotaExtra","Cargo","Nombre","Hora","sendElaboration","downloadPDF","name","route","dir","get","params","PDF","responseType","res","pdfBlob","Blob","type"],"mappings":"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","sourcesContent":["import axios from 'axios'\nimport { saveAs } from 'file-saver'\n\nexport const getData = url => {\n  return axios\n  .post(\"/reffa/get_Codigo\")\n    .then(resp => {\n        //console.log(resp.data.data)\n        return {success:true, data: resp.data.data}\n    })\n    .catch(err => {\n        console.log(\"Error al cargar los datos de >: \"+url+\" error \"+err);\n        return {success:false}\n    })\n}\n\nexport const getFallos = newForm => {\n    return axios\n    .post(newForm.URL,{\n        NumeroEconomico: newForm.NumeroEconomico\n    })\n    .then(resp => {\n        return {success:true, data: resp.data.data}\n    })\n    .catch(err => {\n        console.log(\"Error al cargar los datos de >: \"+newForm.URL+\" error \"+err);\n        return {success:false}\n    })\n}\n\nexport const getReffa = url => {\n  return axios\n  .post(url)\n    .then(resp => {\n        //console.log(resp.data.data)\n        return {success:true, data: resp.data.data}\n    })\n    .catch(err => {\n        console.log(\"Error al cargar los datos de >: \"+url+\" error \"+err);\n        return {success:false}\n    })\n}\n\n\nexport const getHeader = url => {\n  return axios\n  .post(url)\n    .then(resp => {\n        return {success:true, data: resp.data.data}\n    })\n    .catch(err => {\n        console.log(\"Error al cargar los datos de >: \"+url+\" error \"+err);\n        return {success:false}\n    })\n}\n\nexport const updateHeader =  newForm => {\n    console.log(newForm)    \n    return axios\n        .post('fotos/updateheader',{\n            NumeroEconomico: newForm.NumeroEconomico,\n            Foto: newForm.Foto,\n            Codigo: newForm.Codigo,\n            Fecha: newForm.Fecha         \n        })\n        .then(response => {\n            console.log('Datos enviados.')\n        })\n        .catch(err => {\n            console.log(\"Datos NO enviados.\\n\"+err)\n        })\n}\n\nexport const sendFoto =  newForm => {\n    console.log(newForm)    \n    return axios\n        .post('fotos/fotos',{\n            NumeroEconomico: newForm.NumeroEconomico,\n            Foto: newForm.Foto,\n            Codigo: newForm.Codigo,\n            Fecha: newForm.Fecha         \n        })\n        .then(response => {\n            console.log('Datos enviados.')\n        })\n        .catch(err => {\n            console.log(\"Datos NO enviados.\\n\"+err)\n        })\n}\n\nexport const sendCodes =  newForm => {\n    console.log(newForm)    \n    return axios\n        .post('fallos/anexoT',{\n            NumeroEconomico: newForm.NumeroEconomico,\n            Codigo: newForm.Codigos,\n            Elemento: newForm.Elemento,\n            Estatus: newForm.Estatus,\n            Detalle: newForm.Detalle,\n            Ubicaciones: newForm.Localizacion,\n            Observaciones: newForm.Observaciones,\n            Fecha: newForm.Fecha            \n        })\n        .then(response => {\n\t\t console.log('Datos enviados.')\n        })\n        .catch(err => {\n            console.log(\"Datos NO enviados.\\n\"+err)\n        })\n}\n\nexport const sendData =  newForm => {\n    return axios\n        .post('reffa/reffaT',{\n            NumeroEconomico: newForm.NumeroEconomico,\n            EmpresaOperadora: newForm.EmpresaOperadora,\n\t    Kilometraje: newForm.Kilometraje,\n            A単o: newForm.A単oR,\n            NoMotor: newForm.NoMotorR,\n            NoChasis: newForm.NoChasisR,\n            NoTransmision: newForm.NoTransmision,\n            Marca: newForm.MarcaR,\n            Modelo: newForm.ModeloR,\n            Placas: newForm.PlacasR,\n            FechaUltimoMantenimiento: newForm.FechaUltimoMantenimiento,\n            Verificacion: newForm.Verificacion,\n            ConsumoPromedio: newForm.ConsumoPromedio,\n            FechaFumigacion: newForm.FechaFumigacion,\n            NotaExtra: newForm.NotaExtra,\n            Cargo: newForm.Cargo,\n            Fecha: newForm.Fecha,\n            Nombre: newForm.Nombre,\n            Hora: newForm.Hora\n        })\n        .then(response => {\n\t\t console.log('Datos enviados.')\n        })\n        .catch(err => {\n            console.log(\"Datos NO enviados.\\n\"+err)\n        })\n}\n\nexport const sendElaboration =  newForm => {\n    console.log(newForm)\n    return axios\n        .post('personarecepcion/personaR',{\n            Nombre: newForm.Nombre,\n            Fecha: newForm.Fecha,\n            Hora: newForm.Hora,\n            NumeroEconomico: newForm.NumeroEconomico\n        })\n        .then(response => {\n\t\t console.log('Datos enviados.')\n        })\n        .catch(err => {\n            console.log(\"Datos NO enviados.\\n\"+err)\n        })\n}\n\nexport function downloadPDF(name, route){    \n      let dir = name\n      return axios\n    .get(route, { params: {PDF: dir},responseType: 'blob' })\n              .then((res) => {\n                  const pdfBlob = new Blob([res.data], {type: 'application/pdf'})\n    \n                  saveAs(pdfBlob, name+'.pdf')\n              })\n    }\n    \n"]},"metadata":{},"sourceType":"module"}