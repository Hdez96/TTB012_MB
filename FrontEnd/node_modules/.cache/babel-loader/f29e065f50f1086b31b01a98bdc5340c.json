{"ast":null,"code":"import { DEBUG_LOG_KEY } from \"./consts\";\nimport hasWindow from \"./utils/hasWindow\";\nimport { isProduction } from \"./utils\";\nvar isDebug;\n\nvar isEnvDebug = function () {\n  return !isProduction() && process.env.DEBUG;\n};\n\nvar isDebugOn = function () {\n  if (typeof isDebug !== \"boolean\") {\n    isDebug = isEnvDebug() || hasWindow() && (\"location\" in window && !!~window.location.search.indexOf(\"rpldy_debug=true\") || window[DEBUG_LOG_KEY] === true);\n  }\n\n  return isDebug;\n};\n\nvar setDebug = function (debugOn) {\n  if (hasWindow()) {\n    window[DEBUG_LOG_KEY] = debugOn;\n  }\n\n  isDebug = debugOn ? true : null;\n};\n\nvar debugLog = function () {\n  if (isDebugOn()) {\n    var _console; // eslint-disable-next-line no-console\n\n\n    (_console = console).log.apply(_console, arguments);\n  }\n};\n\nexport { isDebugOn, setDebug, debugLog };","map":{"version":3,"sources":["/home/ubuntu/TTB012_MB/FrontEnd/node_modules/@rpldy/shared/lib/esm/logger.js"],"names":["DEBUG_LOG_KEY","hasWindow","isProduction","isDebug","isEnvDebug","process","env","DEBUG","isDebugOn","window","location","search","indexOf","setDebug","debugOn","debugLog","_console","console","log","apply","arguments"],"mappings":"AAAA,SAASA,aAAT,QAA8B,UAA9B;AACA,OAAOC,SAAP,MAAsB,mBAAtB;AACA,SAASC,YAAT,QAA6B,SAA7B;AACA,IAAIC,OAAJ;;AAEA,IAAIC,UAAU,GAAG,YAAY;AAC3B,SAAO,CAACF,YAAY,EAAb,IAAmBG,OAAO,CAACC,GAAR,CAAYC,KAAtC;AACD,CAFD;;AAIA,IAAIC,SAAS,GAAG,YAAY;AAC1B,MAAI,OAAOL,OAAP,KAAmB,SAAvB,EAAkC;AAChCA,IAAAA,OAAO,GAAGC,UAAU,MAAMH,SAAS,OAAO,cAAcQ,MAAd,IAAwB,CAAC,CAAC,CAACA,MAAM,CAACC,QAAP,CAAgBC,MAAhB,CAAuBC,OAAvB,CAA+B,kBAA/B,CAA3B,IAAiFH,MAAM,CAACT,aAAD,CAAN,KAA0B,IAAlH,CAAnC;AACD;;AAED,SAAOG,OAAP;AACD,CAND;;AAQA,IAAIU,QAAQ,GAAG,UAAUC,OAAV,EAAmB;AAChC,MAAIb,SAAS,EAAb,EAAiB;AACfQ,IAAAA,MAAM,CAACT,aAAD,CAAN,GAAwBc,OAAxB;AACD;;AAEDX,EAAAA,OAAO,GAAGW,OAAO,GAAG,IAAH,GAAU,IAA3B;AACD,CAND;;AAQA,IAAIC,QAAQ,GAAG,YAAY;AACzB,MAAIP,SAAS,EAAb,EAAiB;AACf,QAAIQ,QAAJ,CADe,CAGf;;;AACA,KAACA,QAAQ,GAAGC,OAAZ,EAAqBC,GAArB,CAAyBC,KAAzB,CAA+BH,QAA/B,EAAyCI,SAAzC;AACD;AACF,CAPD;;AASA,SAASZ,SAAT,EAAoBK,QAApB,EAA8BE,QAA9B","sourcesContent":["import { DEBUG_LOG_KEY } from \"./consts\";\nimport hasWindow from \"./utils/hasWindow\";\nimport { isProduction } from \"./utils\";\nvar isDebug;\n\nvar isEnvDebug = function () {\n  return !isProduction() && process.env.DEBUG;\n};\n\nvar isDebugOn = function () {\n  if (typeof isDebug !== \"boolean\") {\n    isDebug = isEnvDebug() || hasWindow() && (\"location\" in window && !!~window.location.search.indexOf(\"rpldy_debug=true\") || window[DEBUG_LOG_KEY] === true);\n  }\n\n  return isDebug;\n};\n\nvar setDebug = function (debugOn) {\n  if (hasWindow()) {\n    window[DEBUG_LOG_KEY] = debugOn;\n  }\n\n  isDebug = debugOn ? true : null;\n};\n\nvar debugLog = function () {\n  if (isDebugOn()) {\n    var _console;\n\n    // eslint-disable-next-line no-console\n    (_console = console).log.apply(_console, arguments);\n  }\n};\n\nexport { isDebugOn, setDebug, debugLog };"]},"metadata":{},"sourceType":"module"}