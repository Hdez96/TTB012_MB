{"ast":null,"code":"import axios from 'axios';\nimport { saveAs } from 'file-saver';\nexport const sendData = newForm => {\n  return axios.post('km/Kilometraje', {\n    NumeroEconomico: newForm.NumeroEconomico,\n    Kilometraje: newForm.Kilometraje,\n    Periodo: newForm.Periodo,\n    Mes: newForm.Mes,\n    Año: newForm.Año\n  }).then(response => {\n    console.log('Datos enviados.');\n  }).catch(err => {\n    console.log(\"Datos NO enviados.\\n\" + err);\n  });\n};\nexport const getDataKilometraje = url => {\n  return axios.post('km/getData').then(resp => {\n    console.log(resp.data.data);\n    return {\n      success: true,\n      data: resp.data.data\n    };\n  }).catch(err => {\n    console.log(\"Eror al cargar los datos de >: \" + url + \" error \" + err);\n    return {\n      success: false\n    };\n  });\n};\nexport const KPDF = newForm => {\n  console.log(\"Creando PDF\");\n  return axios.post('km/KilometrajePDF', {\n    Año: newForm.Año,\n    Mes: newForm.Mes\n  }).then(res => {\n    //const pdfBlob = new Blob([res.data], {type: 'application/pdf'})\n    //saveAs(pdfBlob, 'Factura'+newForm.Año+'.pdf')\n    console.log(\"Creado!\");\n  }).catch(err => {\n    console.log(err);\n  });\n};","map":{"version":3,"sources":["/home/ubuntu/TTB012_MB/FrontEnd/src/componentes/Functions/Kilometraje.js"],"names":["axios","saveAs","sendData","newForm","post","NumeroEconomico","Kilometraje","Periodo","Mes","Año","then","response","console","log","catch","err","getDataKilometraje","url","resp","data","success","KPDF","res"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,MAAT,QAAuB,YAAvB;AAEA,OAAO,MAAMC,QAAQ,GAAIC,OAAO,IAAI;AAChC,SAAOH,KAAK,CACPI,IADE,CACG,gBADH,EACoB;AACnBC,IAAAA,eAAe,EAAEF,OAAO,CAACE,eADN;AAEnBC,IAAAA,WAAW,EAAEH,OAAO,CAACG,WAFF;AAGnBC,IAAAA,OAAO,EAAEJ,OAAO,CAACI,OAHE;AAInBC,IAAAA,GAAG,EAAEL,OAAO,CAACK,GAJM;AAKnBC,IAAAA,GAAG,EAAEN,OAAO,CAACM;AALM,GADpB,EAQFC,IARE,CAQGC,QAAQ,IAAI;AACvBC,IAAAA,OAAO,CAACC,GAAR,CAAY,iBAAZ;AACM,GAVE,EAWFC,KAXE,CAWIC,GAAG,IAAI;AACVH,IAAAA,OAAO,CAACC,GAAR,CAAY,yBAAuBE,GAAnC;AACH,GAbE,CAAP;AAcH,CAfM;AAiBP,OAAO,MAAMC,kBAAkB,GAAGC,GAAG,IAAI;AACrC,SAAOjB,KAAK,CACXI,IADM,CACD,YADC,EAENM,IAFM,CAEDQ,IAAI,IAAI;AACVN,IAAAA,OAAO,CAACC,GAAR,CAAYK,IAAI,CAACC,IAAL,CAAUA,IAAtB;AACA,WAAO;AAACC,MAAAA,OAAO,EAAC,IAAT;AAAeD,MAAAA,IAAI,EAAED,IAAI,CAACC,IAAL,CAAUA;AAA/B,KAAP;AACH,GALM,EAMNL,KANM,CAMAC,GAAG,IAAI;AACVH,IAAAA,OAAO,CAACC,GAAR,CAAY,oCAAkCI,GAAlC,GAAsC,SAAtC,GAAgDF,GAA5D;AACA,WAAO;AAACK,MAAAA,OAAO,EAAC;AAAT,KAAP;AACH,GATM,CAAP;AAUH,CAXM;AAaP,OAAO,MAAMC,IAAI,GAAGlB,OAAO,IAAI;AACvBS,EAAAA,OAAO,CAACC,GAAR,CAAY,aAAZ;AACA,SAAOb,KAAK,CACXI,IADM,CACD,mBADC,EACqB;AACpBK,IAAAA,GAAG,EAAEN,OAAO,CAACM,GADO;AAEpBD,IAAAA,GAAG,EAAEL,OAAO,CAACK;AAFO,GADrB,EAKFE,IALE,CAKIY,GAAD,IAAS;AACH;AACA;AACAV,IAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ;AACX,GATE,EAUNC,KAVM,CAUAC,GAAG,IAAI;AACNH,IAAAA,OAAO,CAACC,GAAR,CAAYE,GAAZ;AACP,GAZM,CAAP;AAaP,CAfM","sourcesContent":["import axios from 'axios'\nimport { saveAs } from 'file-saver'\n\nexport const sendData =  newForm => {\n    return axios\n        .post('km/Kilometraje',{\n            NumeroEconomico: newForm.NumeroEconomico,\n            Kilometraje: newForm.Kilometraje,\n            Periodo: newForm.Periodo,\n            Mes: newForm.Mes,\n            Año: newForm.Año\n        })\n        .then(response => {\n\t\t console.log('Datos enviados.')\n        })\n        .catch(err => {\n            console.log(\"Datos NO enviados.\\n\"+err)\n        })\n}\n\nexport const getDataKilometraje = url => {\n    return axios\n    .post('km/getData')\n    .then(resp => {\n        console.log(resp.data.data)\n        return {success:true, data: resp.data.data}\n    })\n    .catch(err => {\n        console.log(\"Eror al cargar los datos de >: \"+url+\" error \"+err);\n        return {success:false}\n    })\n}\n\nexport const KPDF = newForm => {\n        console.log(\"Creando PDF\")\n        return axios\n        .post('km/KilometrajePDF',  {\n                Año: newForm.Año,\n                Mes: newForm.Mes\n        })\n            .then((res) => {\n                        //const pdfBlob = new Blob([res.data], {type: 'application/pdf'})\n                        //saveAs(pdfBlob, 'Factura'+newForm.Año+'.pdf')\n                        console.log(\"Creado!\")\n            })\n        .catch(err => {\n                console.log(err)\n        })\n}\n"]},"metadata":{},"sourceType":"module"}