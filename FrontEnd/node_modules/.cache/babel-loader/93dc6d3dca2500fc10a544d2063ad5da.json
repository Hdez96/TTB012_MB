{"ast":null,"code":"import axios from 'axios';\nexport const register = newUser => {\n  return axios.post('Users/register', {\n    Nombre: newUser.Nombre,\n    Apellido: newUser.Apellido,\n    Departamento: newUser.Departamento,\n    Tipo: newUser.Tipo,\n    email: newUser.email,\n    password: newUser.password\n  }).then(response => {\n    console.log('Registrado');\n    return response.data;\n  });\n};\nexport const login = user => {\n  return axios.post('Users/login', {\n    email: user.email,\n    password: user.password\n  }).then(response => {\n    console.log(response.data.success + \" \" + response.data.estado);\n    if (response.data.success == true) return {\n      success: true\n    };else if (response.data.success == false && response.data.estado == \"INACTIVO\") {\n      console.log(\"La cuenta no esta activa.\" + response.data.estado);\n      return {\n        success: false,\n        estado: response.data.estado\n      };\n    } else return {\n      success: false,\n      estado: \"No existe\"\n    }; //return response.data\n  }).catch(err => {\n    console.log('Contrase単a y Usuarios no validos , ' + err);\n    return {\n      success: false,\n      estado: \"No existe\"\n    };\n  });\n};\nexport const getData = url => {\n  return axios.post(url).then(resp => {\n    //console.log(resp.data.data)\n    return {\n      success: true,\n      data: resp.data.data\n    };\n  }).catch(err => {\n    console.log(\"Error al cargar los datos de >: \" + url + \" error \" + err);\n    return {\n      success: false\n    };\n  });\n};\nexport const getUserData = newUser => {\n  return axios.post(newUser.url, {\n    email: newUser.email\n  }).then(resp => {\n    //console.log(resp.data.data)\n    return {\n      success: true,\n      data: resp.data.data\n    };\n  }).catch(err => {\n    console.log(\"Error al cargar los datos de >: \" + newUser.url + \" error \" + err);\n    return {\n      success: false\n    };\n  });\n};\nexport const activar_Empleado = newUser => {\n  return axios.post('users/update', {\n    Nombre: newUser.Nombre,\n    Apellido: newUser.Apellido,\n    Departamento: newUser.Departamento,\n    Tipo: newUser.Tipo,\n    email: newUser.email,\n    password: newUser.password,\n    estado: newUser.estado\n  }).then(response => {\n    console.log('Actualizado.');\n    window.location.reload(false);\n    return response.data;\n  });\n};\nexport const recuperar_contrase単a = newUser => {\n  return axios.post('users/recup', {\n    email: newUser.email\n  }).then(response => {\n    console.log('Actualizado.');\n    console.log(\"Prueba\");\n    console.log(response);\n    return response;\n  });\n};\nexport const ActualizarPerfil = newUser => {\n  return axios.post('users/UpdateAll', {\n    Nombre: newUser.Nombre,\n    Apellido: newUser.Apellido,\n    Foto: newUser.Foto,\n    Departamento: newUser.Departamento,\n    Tipo: newUser.Tipo,\n    email: newUser.email,\n    password: newUser.password,\n    passwordn: newUser.passwordn\n  }).then(response => {\n    if (response.data.success) {\n      console.log('Actualizado.');\n      return {\n        success: true\n      };\n    } else return {\n      success: false\n    };\n  }).catch(err => {\n    console.log(\"Error al actualizar los datos de >: \" + newUser.email + \" error \" + err);\n    return {\n      error: false\n    };\n  });\n};\nexport const cambiarCargo = newUser => {\n  return axios.post('users/UpdateCargo', {\n    Nombre: newUser.Nombre,\n    Apellido: newUser.Apellido,\n    Departamento: newUser.Departamento,\n    Tipo: newUser.Tipo,\n    email: newUser.email,\n    password: newUser.password,\n    estado: newUser.estado\n  }).then(response => {\n    console.log('Actualizado.');\n    window.location.reload(false);\n    return response.data;\n  });\n};","map":{"version":3,"sources":["/home/ubuntu/TTB012_MB/FrontEnd/src/componentes/Functions/UserFunctions.js"],"names":["axios","register","newUser","post","Nombre","Apellido","Departamento","Tipo","email","password","then","response","console","log","data","login","user","success","estado","catch","err","getData","url","resp","getUserData","activar_Empleado","window","location","reload","recuperar_contrase単a","ActualizarPerfil","Foto","passwordn","error","cambiarCargo"],"mappings":"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","sourcesContent":["import axios from 'axios'\n\nexport const register = newUser => {\n  return axios\n    .post('Users/register', {\n      Nombre: newUser.Nombre,\n      Apellido: newUser.Apellido,\n      Departamento: newUser.Departamento,\n      Tipo: newUser.Tipo,\n      email: newUser.email,\n      password: newUser.password\n    })\n    .then(response => {\n\t console.log('Registrado')\n\t return response.data\n    })\n}\n\nexport const login = user => {\n  return axios\n    .post('Users/login', {\n      email: user.email,\n      password: user.password\n    })\n    .then(response => {\n      console.log(response.data.success + \" \" +response.data.estado)      \n      if(response.data.success == true)\n        return {success: true}\n      else if(response.data.success == false && response.data.estado == \"INACTIVO\")\n      {\n        console.log(\"La cuenta no esta activa.\"+response.data.estado)\n        return {success: false, estado: response.data.estado}\n      }\n      else\n        return{success:false,estado:\"No existe\"}\n      //return response.data\n    })\n    .catch(err => {\n      console.log('Contrase単a y Usuarios no validos , ' + err)\n      return{success:false,estado:\"No existe\"}\n    })\n}\n\nexport const getData = url => {\n  return axios\n  .post(url)\n    .then(resp => {\n        //console.log(resp.data.data)\n        return {success:true, data: resp.data.data}\n    })\n    .catch(err => {\n        console.log(\"Error al cargar los datos de >: \"+url+\" error \"+err);\n        return {success:false}\n    })\n}\n\nexport const getUserData = newUser => {\n  return axios\n  .post(newUser.url, {\n        email: newUser.email\n      })\n    .then(resp => {\n        //console.log(resp.data.data)\n        return {success:true, data: resp.data.data}\n    })\n    .catch(err => {\n        console.log(\"Error al cargar los datos de >: \"+newUser.url+\" error \"+err);\n        return {success:false}\n    })\n}\n\nexport const activar_Empleado = newUser =>{\n  return axios\n      .post('users/update', {\n        Nombre: newUser.Nombre,\n        Apellido: newUser.Apellido,\n        Departamento: newUser.Departamento,\n        Tipo: newUser.Tipo,\n        email: newUser.email,\n        password: newUser.password,\n        estado: newUser.estado\n      })\n      .then(response => {\n         console.log('Actualizado.')\n         window.location.reload(false)\n         return response.data\n      })\n}\n\nexport const recuperar_contrase単a = newUser =>{\n  return axios\n      .post('users/recup', {\n        email: newUser.email\n      })\n      .then(response => {\n         console.log('Actualizado.')\n         console.log(\"Prueba\")\n         console.log(response)\n         return response\n      })\n}\n\nexport const ActualizarPerfil = newUser =>{\n  return axios\n      .post('users/UpdateAll', {\n        Nombre: newUser.Nombre,\n        Apellido: newUser.Apellido,\n        Foto: newUser.Foto,\n        Departamento: newUser.Departamento,\n        Tipo: newUser.Tipo,\n        email: newUser.email,\n        password: newUser.password,\n        passwordn: newUser.passwordn,\n      })\n      .then(response => {\n        if(response.data.success)\n        {\n          console.log('Actualizado.')\n          return {success:true}\n        }\n        else\n          return {success:false}\n      })\n      .catch(err => {\n        console.log(\"Error al actualizar los datos de >: \"+newUser.email+\" error \"+err);\n        return {error:false}\n    })\n}\n\n\nexport const cambiarCargo = newUser =>{\n  return axios\n      .post('users/UpdateCargo', {\n        Nombre: newUser.Nombre,\n        Apellido: newUser.Apellido,\n        Departamento: newUser.Departamento,\n        Tipo: newUser.Tipo,\n        email: newUser.email,\n        password: newUser.password,\n        estado: newUser.estado\n      })\n      .then(response => {\n         console.log('Actualizado.')\n         window.location.reload(false)\n         return response.data\n      })\n}\n"]},"metadata":{},"sourceType":"module"}