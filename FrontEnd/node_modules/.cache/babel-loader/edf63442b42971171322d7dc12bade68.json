{"ast":null,"code":"import axios from 'axios';\nimport { saveAs } from 'file-saver';\nexport const sendData = newForm => {\n  return axios.post('Rendimientos/rendimientos', {\n    NumeroEconomico: newForm.NumeroEconomico,\n    Kilometraje: newForm.Kilometraje,\n    ConsumoDiesel: newForm.ConsumoDiesel,\n    RendimientoDiesel: newForm.RendimientoDiesel,\n    Periodo: newForm.Periodo,\n    Año: newForm.Año\n  }).then(response => {\n    console.log('Datos enviados.');\n  }).catch(err => {\n    console.log('Datos NO enviados.' + err);\n  });\n};\nexport const getDataRendimientos = url => {\n  return axios.post('Rendimientos/getData').then(resp => {\n    //  console.log(resp.data.data)\n    return {\n      success: true,\n      data: resp.data.data\n    };\n  }).catch(err => {\n    console.log(\"Eror al cargar los datos de >: \" + url + \" error \" + err);\n    return {\n      success: false\n    };\n  });\n};\nexport const RPDF = newForm => {\n  console.log(\"Creando PDF\");\n  return axios.post('Rendimientos/RendimientosPDF', {\n    Año: newForm.Año,\n    Periodo: newForm.Mes\n  }).then(res => {\n    //const pdfBlob = new Blob([res.data], {type: 'application/pdf'})\n    //saveAs(pdfBlob, 'Factura'+newForm.Año+'.pdf')\n    console.log(\"Creado!\");\n  }).catch(err => {\n    console.log(err);\n  });\n};","map":{"version":3,"sources":["/home/ubuntu/TTB012_MB/FrontEnd/src/componentes/Functions/Rendimientos.js"],"names":["axios","saveAs","sendData","newForm","post","NumeroEconomico","Kilometraje","ConsumoDiesel","RendimientoDiesel","Periodo","Año","then","response","console","log","catch","err","getDataRendimientos","url","resp","success","data","RPDF","Mes","res"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,MAAT,QAAuB,YAAvB;AAEA,OAAO,MAAMC,QAAQ,GAAGC,OAAO,IAAI;AAClC,SAAOH,KAAK,CACVI,IADK,CACA,2BADA,EAC4B;AACjCC,IAAAA,eAAe,EAAEF,OAAO,CAACE,eADQ;AAEjCC,IAAAA,WAAW,EAAEH,OAAO,CAACG,WAFY;AAGjCC,IAAAA,aAAa,EAAEJ,OAAO,CAACI,aAHU;AAIjCC,IAAAA,iBAAiB,EAAEL,OAAO,CAACK,iBAJM;AAKjCC,IAAAA,OAAO,EAAEN,OAAO,CAACM,OALgB;AAMjCC,IAAAA,GAAG,EAAEP,OAAO,CAACO;AANoB,GAD5B,EASLC,IATK,CASAC,QAAQ,IAAI;AACjBC,IAAAA,OAAO,CAACC,GAAR,CAAY,iBAAZ;AACA,GAXK,EAYLC,KAZK,CAYCC,GAAG,IAAI;AACbH,IAAAA,OAAO,CAACC,GAAR,CAAY,uBAAqBE,GAAjC;AACA,GAdK,CAAP;AAeA,CAhBM;AAkBP,OAAO,MAAMC,mBAAmB,GAAGC,GAAG,IAAI;AACtC,SAAOlB,KAAK,CACXI,IADM,CACD,sBADC,EAENO,IAFM,CAEDQ,IAAI,IAAI;AAClB;AACQ,WAAO;AAACC,MAAAA,OAAO,EAAC,IAAT;AAAeC,MAAAA,IAAI,EAAEF,IAAI,CAACE,IAAL,CAAUA;AAA/B,KAAP;AACH,GALM,EAMNN,KANM,CAMAC,GAAG,IAAI;AACVH,IAAAA,OAAO,CAACC,GAAR,CAAY,oCAAkCI,GAAlC,GAAsC,SAAtC,GAAgDF,GAA5D;AACA,WAAO;AAACI,MAAAA,OAAO,EAAC;AAAT,KAAP;AACH,GATM,CAAP;AAUH,CAXM;AAaP,OAAO,MAAME,IAAI,GAAGnB,OAAO,IAAI;AACvBU,EAAAA,OAAO,CAACC,GAAR,CAAY,aAAZ;AACA,SAAOd,KAAK,CACXI,IADM,CACD,8BADC,EACgC;AAC/BM,IAAAA,GAAG,EAAEP,OAAO,CAACO,GADkB;AAE/BD,IAAAA,OAAO,EAAEN,OAAO,CAACoB;AAFc,GADhC,EAKFZ,IALE,CAKIa,GAAD,IAAS;AACH;AACA;AACAX,IAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ;AACX,GATE,EAUNC,KAVM,CAUAC,GAAG,IAAI;AACNH,IAAAA,OAAO,CAACC,GAAR,CAAYE,GAAZ;AACP,GAZM,CAAP;AAaP,CAfM","sourcesContent":["import axios from 'axios'\nimport { saveAs } from 'file-saver'\n\nexport const sendData = newForm => {\n\treturn axios\n\t\t.post('Rendimientos/rendimientos',{\n\t\t\tNumeroEconomico: newForm.NumeroEconomico,\n\t\t\tKilometraje: newForm.Kilometraje,\n\t\t\tConsumoDiesel: newForm.ConsumoDiesel,\n\t\t\tRendimientoDiesel: newForm.RendimientoDiesel,\n\t\t\tPeriodo: newForm.Periodo,\n\t\t\tAño: newForm.Año\n\t\t})\n\t\t.then(response => {\n\t\t\tconsole.log('Datos enviados.')\n\t\t})\n\t\t.catch(err => {\n\t\t\tconsole.log('Datos NO enviados.'+err)\n\t\t})\n}\n\nexport const getDataRendimientos = url => {\n    return axios\n    .post('Rendimientos/getData')\n    .then(resp => {\n//  console.log(resp.data.data)\n        return {success:true, data: resp.data.data}\n    })\n    .catch(err => {\n        console.log(\"Eror al cargar los datos de >: \"+url+\" error \"+err);\n        return {success:false}\n    })\n}\n\nexport const RPDF = newForm => {\n        console.log(\"Creando PDF\")\n        return axios\n        .post('Rendimientos/RendimientosPDF',  {\n                Año: newForm.Año,\n                Periodo: newForm.Mes\n        })\n            .then((res) => {\n                        //const pdfBlob = new Blob([res.data], {type: 'application/pdf'})\n                        //saveAs(pdfBlob, 'Factura'+newForm.Año+'.pdf')\n                        console.log(\"Creado!\")\n            })\n        .catch(err => {\n                console.log(err)\n        })\n}\n"]},"metadata":{},"sourceType":"module"}