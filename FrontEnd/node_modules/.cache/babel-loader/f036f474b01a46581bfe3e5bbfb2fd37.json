{"ast":null,"code":"import axios from 'axios';\nimport { saveAs } from 'file-saver';\nexport const sendData = newForm => {\n  let dir = newForm.mes;\n  return axios.post('consumoE/ConsumoEPDF', {\n    Mes: newForm.mes\n  }).then(res1 => {\n    console.log(\"enviado\");\n    console.log(dir);\n    let direc = \"Consumo\" + dir + \".pdf\";\n    axios.get('consumoE/fetch-pdf', {\n      params: {\n        PDF: dir\n      },\n      responseType: 'blob'\n    }).then(res => {\n      const pdfBlob = new Blob([res.data], {\n        type: 'application/pdf'\n      });\n      saveAs(pdfBlob, direc);\n    }).catch(err => {\n      console.log(\"Error descargando:\" + err);\n    });\n  }).catch(err => {\n    console.log(\"Error creando:\" + err);\n  });\n};\nexport function downloadPDF(name, route) {\n  //  console.log(\"Solicitando\"  + name + \" a: \"+route);\n  let dir = name;\n  return axios.get(route, {\n    params: {\n      PDF: dir\n    },\n    responseType: 'blob'\n  }).then(res => {\n    const pdfBlob = new Blob([res.data], {\n      type: 'application/pdf'\n    }); //\t\tconsole.log(\"Mi ruta\"+route)\n\n    if (route.indexOf(\"Cedularti\") > 0) {\n      //\t\t\tconsole.log(\"Aqui no\")\n      saveAs(pdfBlob, \"Cedularti-\" + name + '.pdf');\n    } else if (route.indexOf(\"CedulaTRA\") > 0) {\n      //\t\t\tconsole.log(\"Aqui si\")\n      saveAs(pdfBlob, \"Cedulatra-\" + name + '.pdf');\n    } else {\n      //\t\t\tconsole.log(\"Aqui tal vez\")\n      saveAs(pdfBlob, name + '.pdf');\n    }\n  });\n}\nexport function downloadExcel(name, route) {\n  console.log(\"Solicitando\" + name + \" a: \" + route);\n  let dir = name;\n  return axios.get(route, {\n    params: {\n      PDF: dir\n    },\n    responseType: 'blob'\n  }).then(res => {\n    const pdfBlob = new Blob([res.data], {\n      type: 'application/vnd.ms-excel'\n    });\n\n    if (route.indexOf(\"revtecinicial\") > 0) {\n      console.log(\"Aqui no\");\n      saveAs(pdfBlob, \"Cedularti-\" + name + '.xlsx');\n    } else if (route.indexOf(\"CedulaTRA\") > 0) {\n      console.log(\"Aqui si\");\n      saveAs(pdfBlob, \"Cedulatra-\" + name + '.xlsx');\n    } else {\n      saveAs(pdfBlob, name + '.xlsx');\n    }\n  });\n}\nexport function generarPDF(name, route) {\n  //console.log(\"Solicitando\"  + name + \" a: \"+route);\n  console.log(\"ALOS\");\n  return axios.post('pruebasdesempeno/PruebasPDF', {\n    NumeroEconomico: name\n  }).then(res => {\n    console.log(\"Creando...\");\n  }).catch(err => {\n    console.log(err);\n  });\n}\nexport const downloadExcelP = newForm => {\n  //      console.log(\"HOLASES\")\n  let name = newForm.NombrePDF;\n  return axios.post('pruebasdesempeno/PruebasPDF', {\n    NumeroEconomico: newForm.NombrePDF,\n    Fecha: newForm.Fecha\n  }).then(res1 => {\n    console.log(\"enviado\");\n    console.log(name);\n    let direc = name + \".xlsx\";\n    axios.get('pruebasdesempeno/fetch-excel', {\n      params: {\n        PDF: name\n      },\n      responseType: 'blob'\n    }).then(res => {\n      const pdfBlob = new Blob([res.data], {\n        type: 'application/vnd.ms-excel'\n      });\n      saveAs(pdfBlob, direc);\n    }).catch(err => {\n      console.log(\"Error descargando:\" + err);\n    });\n  }).catch(err => {\n    console.log(\"Error creando:\" + err);\n  });\n};\nexport const downloadPDFP = newForm => {\n  //\tconsole.log(\"HOLASES\")\n  let name = newForm.NombrePDF;\n  return axios.post('pruebasdesempeno/PruebasPDF', {\n    NumeroEconomico: newForm.NombrePDF,\n    Fecha: newForm.Fecha\n  }).then(res1 => {\n    console.log(\"enviado\");\n    console.log(name);\n    let direc = name + \".pdf\";\n    axios.get('pruebasdesempeno/fetch-pdf', {\n      params: {\n        PDF: name\n      },\n      responseType: 'blob'\n    }).then(res => {\n      const pdfBlob = new Blob([res.data], {\n        type: 'application/pdf'\n      });\n      saveAs(pdfBlob, direc);\n    }).catch(err => {\n      console.log(\"Error descargando:\" + err);\n    });\n  }).catch(err => {\n    console.log(\"Error creando:\" + err);\n  });\n};\nexport function EXCEL(newForm) {\n  console.log(\"Creando PDF\");\n  return axios.post(newForm.route, {\n    A単o: newForm.A単o,\n    Mes: newForm.Mes\n  }).then(res => {\n    //const pdfBlob = new Blob([res.data], {type: 'application/pdf'})\n    //saveAs(pdfBlob, 'Factura'+newForm.A単o+'.pdf')\n    console.log(\"Creado!\");\n  }).catch(err => {\n    console.log(err);\n  });\n}","map":{"version":3,"sources":["/home/ubuntu/TTB012_MB/FrontEnd/src/componentes/Functions/Busqueda.js"],"names":["axios","saveAs","sendData","newForm","dir","mes","post","Mes","then","res1","console","log","direc","get","params","PDF","responseType","res","pdfBlob","Blob","data","type","catch","err","downloadPDF","name","route","indexOf","downloadExcel","generarPDF","NumeroEconomico","downloadExcelP","NombrePDF","Fecha","downloadPDFP","EXCEL","A単o"],"mappings":"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","sourcesContent":["\nimport axios from 'axios'\nimport { saveAs } from 'file-saver'\n\nexport const sendData =  newForm => {\n    let dir = newForm.mes\n    return axios\n        .post('consumoE/ConsumoEPDF',{\n           Mes : newForm.mes\n        })\n        .then((res1) =>{\n          console.log(\"enviado\") \n          console.log(dir) \n          let direc = \"Consumo\"+dir+\".pdf\"\n          axios.get('consumoE/fetch-pdf', { params: {PDF: dir},responseType: 'blob' })\n          .then((res) => {\n            const pdfBlob = new Blob([res.data], {type: 'application/pdf'})\n            saveAs(pdfBlob, direc)\n          })\n          .catch(err =>{\n            console.log(\"Error descargando:\" + err)\n          })\n        })\n        .catch(err =>{\n          console.log(\"Error creando:\" + err)\n        })\n}\n\nexport function downloadPDF(name, route){\n//  console.log(\"Solicitando\"  + name + \" a: \"+route);\n  let dir = name\n  return axios\n.get(route, { params: {PDF: dir},responseType: 'blob' })\n          .then((res) => {\n              const pdfBlob = new Blob([res.data], {type: 'application/pdf'})\n//\t\tconsole.log(\"Mi ruta\"+route)\n\t\tif(route.indexOf(\"Cedularti\")>0)\n                {\n//\t\t\tconsole.log(\"Aqui no\")\n\t\t\tsaveAs(pdfBlob, \"Cedularti-\"+name+'.pdf')\n\t        }\n\t\telse if(route.indexOf(\"CedulaTRA\")>0)\n\t\t{\n//\t\t\tconsole.log(\"Aqui si\")\n             \t\tsaveAs(pdfBlob, \"Cedulatra-\"+ name+'.pdf')\n\t\t}\n\t\telse\n\t\t{\n//\t\t\tconsole.log(\"Aqui tal vez\")\n\t\t\tsaveAs(pdfBlob, name+'.pdf')\n        \t}\n\t  })\n}\n\nexport function downloadExcel(name, route){\n  console.log(\"Solicitando\"  + name + \" a: \"+route);\n  let dir = name\n  return axios\n.get(route, { params: {PDF: dir},responseType: 'blob' })\n          .then((res) => {\n              const pdfBlob = new Blob([res.data], {type: 'application/vnd.ms-excel'})\n\t\tif(route.indexOf(\"revtecinicial\")>0)\n                {\n                      console.log(\"Aqui no\")\n                        saveAs(pdfBlob, \"Cedularti-\"+name+'.xlsx')\n                }\n                else if(route.indexOf(\"CedulaTRA\")>0)\n                {\n                      console.log(\"Aqui si\")\n                        saveAs(pdfBlob, \"Cedulatra-\"+ name+'.xlsx')\n                }\n                else\n                {\n\t              saveAs(pdfBlob, name+'.xlsx')\n        \t}  \n\t})\n}\n\n\nexport function generarPDF(name,route)\n{\t\n  //console.log(\"Solicitando\"  + name + \" a: \"+route);\n console.log(\"ALOS\")  \n return axios.post('pruebasdesempeno/PruebasPDF',{\n        NumeroEconomico: name\n  })\n  .then(res => {\n        console.log(\"Creando...\")\n  })\n  .catch(err => {\n        console.log(err)\n  })\n\n}\n\nexport const downloadExcelP = newForm =>{\n//      console.log(\"HOLASES\")\n        let name = newForm.NombrePDF\n  return axios\n        .post('pruebasdesempeno/PruebasPDF',{\n           NumeroEconomico : newForm.NombrePDF,\n           Fecha: newForm.Fecha\n        })\n        .then((res1) =>{\n          console.log(\"enviado\") \n          console.log(name) \n          let direc = name+\".xlsx\"\n          axios.get('pruebasdesempeno/fetch-excel', { params: {PDF: name},responseType: 'blob' })\n          .then((res) => {\n            const pdfBlob = new Blob([res.data], {type: 'application/vnd.ms-excel'})\n            saveAs(pdfBlob, direc)\n          })\n          .catch(err =>{\n            console.log(\"Error descargando:\" + err)\n          })\n        })\n        .catch(err =>{\n          console.log(\"Error creando:\" + err)\n        })\n\n}\n\nexport const downloadPDFP = newForm =>{\n//\tconsole.log(\"HOLASES\")\n\tlet name = newForm.NombrePDF\n  return axios\n        .post('pruebasdesempeno/PruebasPDF',{\n           NumeroEconomico : newForm.NombrePDF,\n\t   Fecha: newForm.Fecha\n        })\n        .then((res1) =>{\n          console.log(\"enviado\") \n          console.log(name) \n          let direc = name+\".pdf\"\n          axios.get('pruebasdesempeno/fetch-pdf', { params: {PDF: name},responseType: 'blob' })\n          .then((res) => {\n            const pdfBlob = new Blob([res.data], {type: 'application/pdf'})\n            saveAs(pdfBlob, direc)\n          })\n          .catch(err =>{\n            console.log(\"Error descargando:\" + err)\n          })\n        })\n        .catch(err =>{\n          console.log(\"Error creando:\" + err)\n        })\n\n}\n\nexport function EXCEL(newForm) {\n        console.log(\"Creando PDF\")\n        return axios\n        .post(newForm.route,  {\n                A単o: newForm.A単o,\n                Mes: newForm.Mes\n        })\n            .then((res) => {\n                        //const pdfBlob = new Blob([res.data], {type: 'application/pdf'})\n                        //saveAs(pdfBlob, 'Factura'+newForm.A単o+'.pdf')\n                        console.log(\"Creado!\")\n            })\n        .catch(err => {\n                console.log(err)\n        })\n}\n"]},"metadata":{},"sourceType":"module"}