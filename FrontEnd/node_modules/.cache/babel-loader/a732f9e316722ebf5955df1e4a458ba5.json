{"ast":null,"code":"import axios from 'axios';\nimport { saveAs } from 'file-saver';\nexport const sendData = newForm => {\n  return axios.post('ConsumoE/consumoE', {\n    NumeroEconomico: newForm.NumeroEconomico,\n    Mes: newForm.Mes,\n    KilometrajePorMes: newForm.KilometrajePorMes,\n    RendimientoDiesel: newForm.RendimientoDiesel,\n    RendimientoAdblue: newForm.RendimientoAdblue,\n    ConsumoMensualDiesel: newForm.ConsumoMensualDiesel,\n    ConsumoMensualAdblue: newForm.ConsumoMensualAdblue\n  }).then(response => {\n    console.log('Datos enviados.');\n  }).catch(err => {\n    console.log(\"Datos NO enviados.\\n\" + err);\n  });\n};\nexport function downloadPDF(name) {\n  console.log(name);\n  return axios.get('ConsumoE/fetch-pdf', {\n    params: {\n      PDF: name\n    },\n    responseType: 'blob'\n  }).then(res => {\n    const pdfBlob = new Blob([res.data], {\n      type: 'application/pdf'\n    });\n    saveAs(pdfBlob, 'Factura' + name + '.pdf');\n  });\n}\nexport const getDataConsumoEmpresa = url => {\n  return axios.post('ConsumoE/getData').then(resp => {\n    //\tconsole.log(resp.data.data)\n    return {\n      success: true,\n      data: resp.data.data\n    };\n  }).catch(err => {\n    console.log(\"Eror al cargar los datos de >: \" + url + \" error \" + err);\n    return {\n      success: false\n    };\n  });\n};\nexport const EPDF = newForm => {\n  console.log(newForm);\n  return axios.post('consumoE/ConsumoEPDF', {\n    Mes: newForm.Mes,\n    Año: newForm.Año\n  }).then(res => {\n    //                const pdfBlob = new Blob([res.data], {type: 'application/pdf'})\n    console.log(\"Creado\"); //            saveAs(pdfBlob, 'Factura'+newForm.NumeroFactura+'.pdf')\n  }).catch(err => {\n    console.log(err);\n  });\n};","map":{"version":3,"sources":["/home/ubuntu/TTB012_MB/FrontEnd/src/componentes/Functions/ConsumoEmpresa.js"],"names":["axios","saveAs","sendData","newForm","post","NumeroEconomico","Mes","KilometrajePorMes","RendimientoDiesel","RendimientoAdblue","ConsumoMensualDiesel","ConsumoMensualAdblue","then","response","console","log","catch","err","downloadPDF","name","get","params","PDF","responseType","res","pdfBlob","Blob","data","type","getDataConsumoEmpresa","url","resp","success","EPDF","Año"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,MAAT,QAAuB,YAAvB;AAEA,OAAO,MAAMC,QAAQ,GAAIC,OAAO,IAAI;AAChC,SAAOH,KAAK,CACPI,IADE,CACG,mBADH,EACuB;AACtBC,IAAAA,eAAe,EAAEF,OAAO,CAACE,eADH;AAE7BC,IAAAA,GAAG,EAAEH,OAAO,CAACG,GAFgB;AAGtBC,IAAAA,iBAAiB,EAAEJ,OAAO,CAACI,iBAHL;AAItBC,IAAAA,iBAAiB,EAAEL,OAAO,CAACK,iBAJL;AAKtBC,IAAAA,iBAAiB,EAAEN,OAAO,CAACM,iBALL;AAMtBC,IAAAA,oBAAoB,EAAEP,OAAO,CAACO,oBANR;AAOtBC,IAAAA,oBAAoB,EAAER,OAAO,CAACQ;AAPR,GADvB,EAUFC,IAVE,CAUGC,QAAQ,IAAI;AACvBC,IAAAA,OAAO,CAACC,GAAR,CAAY,iBAAZ;AACM,GAZE,EAaFC,KAbE,CAaIC,GAAG,IAAI;AACVH,IAAAA,OAAO,CAACC,GAAR,CAAY,yBAAuBE,GAAnC;AACH,GAfE,CAAP;AAgBH,CAjBM;AAmBP,OAAO,SAASC,WAAT,CAAqBC,IAArB,EAA0B;AAC7BL,EAAAA,OAAO,CAACC,GAAR,CAAYI,IAAZ;AACA,SAAOnB,KAAK,CACdoB,GADS,CACL,oBADK,EACiB;AAAEC,IAAAA,MAAM,EAAE;AAACC,MAAAA,GAAG,EAAEH;AAAN,KAAV;AAAsBI,IAAAA,YAAY,EAAE;AAApC,GADjB,EAEEX,IAFF,CAEQY,GAAD,IAAS;AACX,UAAMC,OAAO,GAAG,IAAIC,IAAJ,CAAS,CAACF,GAAG,CAACG,IAAL,CAAT,EAAqB;AAACC,MAAAA,IAAI,EAAE;AAAP,KAArB,CAAhB;AAEA3B,IAAAA,MAAM,CAACwB,OAAD,EAAU,YAAUN,IAAV,GAAe,MAAzB,CAAN;AACH,GANF,CAAP;AAOH;AAED,OAAO,MAAMU,qBAAqB,GAAGC,GAAG,IAAI;AACxC,SAAO9B,KAAK,CACdI,IADS,CACJ,kBADI,EAENQ,IAFM,CAEDmB,IAAI,IAAI;AAClB;AACQ,WAAO;AAACC,MAAAA,OAAO,EAAC,IAAT;AAAeL,MAAAA,IAAI,EAAEI,IAAI,CAACJ,IAAL,CAAUA;AAA/B,KAAP;AACH,GALM,EAMNX,KANM,CAMAC,GAAG,IAAI;AACdH,IAAAA,OAAO,CAACC,GAAR,CAAY,oCAAkCe,GAAlC,GAAsC,SAAtC,GAAgDb,GAA5D;AACG,WAAO;AAACe,MAAAA,OAAO,EAAC;AAAT,KAAP;AACF,GATM,CAAP;AAUH,CAXM;AAaP,OAAO,MAAMC,IAAI,GAAG9B,OAAO,IAAI;AAC9BW,EAAAA,OAAO,CAACC,GAAR,CAAYZ,OAAZ;AACA,SAAOH,KAAK,CACXI,IADM,CACD,sBADC,EACuB;AAC7BE,IAAAA,GAAG,EAAEH,OAAO,CAACG,GADgB;AAE7B4B,IAAAA,GAAG,EAAE/B,OAAO,CAAC+B;AAFgB,GADvB,EAKKtB,IALL,CAKWY,GAAD,IAAS;AAC3B;AACEV,IAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ,EAFyB,CAGzB;AACW,GATL,EAUNC,KAVM,CAUAC,GAAG,IAAI;AACbH,IAAAA,OAAO,CAACC,GAAR,CAAYE,GAAZ;AACA,GAZM,CAAP;AAaA,CAfM","sourcesContent":["import axios from 'axios'\nimport { saveAs } from 'file-saver'\n\nexport const sendData =  newForm => {\n    return axios\n        .post('ConsumoE/consumoE',{\n            NumeroEconomico: newForm.NumeroEconomico,\n\t    Mes: newForm.Mes,\n            KilometrajePorMes: newForm.KilometrajePorMes,\n            RendimientoDiesel: newForm.RendimientoDiesel,\n            RendimientoAdblue: newForm.RendimientoAdblue,\n            ConsumoMensualDiesel: newForm.ConsumoMensualDiesel,\n            ConsumoMensualAdblue: newForm.ConsumoMensualAdblue\n        })\n        .then(response => {\n\t\t console.log('Datos enviados.')\n        })\n        .catch(err => {\n            console.log(\"Datos NO enviados.\\n\"+err)\n        })\n}\n\nexport function downloadPDF(name){\n    console.log(name);\n    return axios\n\t.get('ConsumoE/fetch-pdf', { params: {PDF: name},responseType: 'blob' })\n            .then((res) => {\n                const pdfBlob = new Blob([res.data], {type: 'application/pdf'})\n\n                saveAs(pdfBlob, 'Factura'+name+'.pdf')\n            })\n}\n\nexport const getDataConsumoEmpresa = url => {\n    return axios\n\t.post('ConsumoE/getData')\n    .then(resp => {\n//\tconsole.log(resp.data.data)\n        return {success:true, data: resp.data.data}\n    })\n    .catch(err => {\n\t   console.log(\"Eror al cargar los datos de >: \"+url+\" error \"+err);\n       return {success:false}\n    })\n}\n\nexport const EPDF = newForm => {\n\tconsole.log(newForm)\n\treturn axios\n\t.post('consumoE/ConsumoEPDF', {\n\t\tMes: newForm.Mes,\n\t\tAño: newForm.Año\n\t})\n            .then((res) => {\n//                const pdfBlob = new Blob([res.data], {type: 'application/pdf'})\n\t\tconsole.log(\"Creado\")\n  //            saveAs(pdfBlob, 'Factura'+newForm.NumeroFactura+'.pdf')\n            })\n\t.catch(err => {\n\t\tconsole.log(err)\n\t})\n}\n\n"]},"metadata":{},"sourceType":"module"}