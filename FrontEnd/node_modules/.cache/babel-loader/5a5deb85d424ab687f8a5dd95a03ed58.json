{"ast":null,"code":"var _jsxFileName = \"/home/ubuntu/TTB012_MB/FrontEnd/src/componentes/paginas/Levantamiento.jsx\";\nimport React from 'react';\nimport { withStyles, makeStyles } from '@material-ui/core/styles';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\nimport Button from '@material-ui/core/Button';\nimport { green, purple, red, yellow } from '@material-ui/core/colors';\nimport { Grid, Box } from '@material-ui/core/';\nimport { withRouter } from 'react-router-dom';\nimport { MuiThemeProvider, createMuiTheme } from '@material-ui/core/styles';\n\nconst Levantamiento = () => {\n  /*const ColorButton = withStyles((theme) => ({\n      root: {\n        color: theme.palette.getContrastText(green[500]),\n        backgroundColor: green[500],\n        '&:hover': {\n          backgroundColor: green[700],\n        },\n      },\n    }))(Button);*/\n  const theme = createMuiTheme({\n    palette: {\n      primary: green,\n      secondary: yellow,\n      error: red\n    }\n  });\n  const StyledTableCell = withStyles(theme => ({\n    head: {\n      backgroundColor: theme.palette.error.light,\n      color: theme.palette.common.white,\n      size: 'small'\n    },\n    body: {\n      fontSize: 14\n    }\n  }))(TableCell);\n  const StyledTableRow = withStyles(theme => ({\n    root: {\n      '&:nth-of-type(odd)': {\n        backgroundColor: theme.palette.action.hover\n      }\n    }\n  }))(TableRow);\n\n  function createData(name, date, estatus, color) {\n    if (estatus == \"Aprobado\") color = \"primary\";else if (estatus == \"En espera\") color = \"secondary\";else if (estatus == \"Rechazado\") color = \"error\";\n    return {\n      name,\n      date,\n      estatus,\n      color\n    };\n  }\n\n  const rows = [createData('1300', '2020-02-15', 'Aprobado', \"\"), createData('1301', '2020-02-16', 'Aprobado', \"\"), createData('1302', '2020-02-17', 'En espera', \"\"), createData('1303', '2020-02-18', 'En espera', \"\"), createData('1304', '2020-02-19', 'Rechazado', \"\")];\n  const useStyles = makeStyles(theme => ({\n    table: {\n      minWidth: 50\n    }\n  }));\n  const classes = useStyles();\n  return /*#__PURE__*/React.createElement(TableContainer, {\n    component: Paper,\n    theme: theme,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Box, {\n    mr: 2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Table, {\n    className: classes.table,\n    \"aria-label\": \"customized table\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(TableHead, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(TableRow, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(StyledTableCell, {\n    align: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 13\n    }\n  }, \"Numero de levantamiento\"), /*#__PURE__*/React.createElement(StyledTableCell, {\n    align: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 13\n    }\n  }, \"Fecha\"), /*#__PURE__*/React.createElement(StyledTableCell, {\n    align: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 13\n    }\n  }, \"Estado\"))), /*#__PURE__*/React.createElement(TableBody, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 9\n    }\n  }, rows.map(row => /*#__PURE__*/React.createElement(StyledTableRow, {\n    key: row.name,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(StyledTableCell, {\n    align: \"center\",\n    component: \"th\",\n    scope: \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 15\n    }\n  }, row.name), /*#__PURE__*/React.createElement(StyledTableCell, {\n    align: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 15\n    }\n  }, row.date), /*#__PURE__*/React.createElement(StyledTableCell, {\n    align: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    color: row.color,\n    variant: \"raised\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 15\n    }\n  }, row.estatus)))))))));\n};\n\nexport default withRouter(Levantamiento);","map":{"version":3,"sources":["/home/ubuntu/TTB012_MB/FrontEnd/src/componentes/paginas/Levantamiento.jsx"],"names":["React","withStyles","makeStyles","Table","TableBody","TableCell","TableContainer","TableHead","TableRow","Paper","Button","green","purple","red","yellow","Grid","Box","withRouter","MuiThemeProvider","createMuiTheme","Levantamiento","theme","palette","primary","secondary","error","StyledTableCell","head","backgroundColor","light","color","common","white","size","body","fontSize","StyledTableRow","root","action","hover","createData","name","date","estatus","rows","useStyles","table","minWidth","classes","map","row"],"mappings":"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","sourcesContent":["import React from 'react'\nimport { withStyles, makeStyles } from '@material-ui/core/styles';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\nimport Button from '@material-ui/core/Button';\nimport { green, purple, red, yellow } from '@material-ui/core/colors';\nimport {Grid,Box}  from '@material-ui/core/';\nimport { withRouter } from 'react-router-dom';\nimport { MuiThemeProvider, createMuiTheme } from '@material-ui/core/styles';\n\nconst Levantamiento = () => {\n\n    /*const ColorButton = withStyles((theme) => ({\n        root: {\n          color: theme.palette.getContrastText(green[500]),\n          backgroundColor: green[500],\n          '&:hover': {\n            backgroundColor: green[700],\n          },\n        },\n      }))(Button);*/\n\n      const theme = createMuiTheme({\n  palette: {\n    primary: green,\n    secondary: yellow,\n    error: red,\n  },\n});\n      \n      const StyledTableCell = withStyles((theme) => ({\n        head: {\n          backgroundColor: theme.palette.error.light,\n          color: theme.palette.common.white,\n          size:  'small',\n        \n        },\n        body: {\n          fontSize: 14,\n        },\n      }))(TableCell);\n      \n      const StyledTableRow = withStyles((theme) => ({\n        root: {\n          '&:nth-of-type(odd)': {\n            backgroundColor: theme.palette.action.hover,\n            \n          },\n        },\n      }))(TableRow);\n      \n      function createData(name, date, estatus,color) {\n        if(estatus == \"Aprobado\")\n          color = \"primary\"\n        else if(estatus == \"En espera\")\n            color = \"secondary\" \n        else if(estatus == \"Rechazado\")\n            color = \"error\"\n        return { name, date, estatus,color};\n\n      }\n      \n      const rows = [\n        createData('1300', '2020-02-15', 'Aprobado',\"\"),\n        createData('1301', '2020-02-16', 'Aprobado',\"\"),\n        createData('1302', '2020-02-17', 'En espera',\"\"),\n        createData('1303', '2020-02-18', 'En espera',\"\"),\n        createData('1304', '2020-02-19', 'Rechazado',\"\"),\n      ];\n      \n      \n\n      const useStyles = makeStyles(theme => ({\n        table: {\n            minWidth: 50\n        }\n        \n      }));\n\n      const classes = useStyles();\n\n    return (  \n    <TableContainer component={Paper} theme={theme}> \n        <Grid item xs={12}>\n            <Box mr={2}>\n      <Table className={classes.table} aria-label=\"customized table\">\n        <TableHead>\n          <TableRow>\n            <StyledTableCell align=\"center\">Numero de levantamiento</StyledTableCell>\n            <StyledTableCell align=\"center\">Fecha</StyledTableCell>\n            <StyledTableCell align=\"center\">Estado</StyledTableCell>\n            \n          </TableRow>\n        </TableHead>\n        <TableBody>\n          {rows.map((row) => (\n            <StyledTableRow key={row.name}>\n              <StyledTableCell align=\"center\" component=\"th\" scope=\"row\">\n                {row.name}\n              </StyledTableCell>\n              <StyledTableCell align=\"center\">{row.date}</StyledTableCell>\n              <StyledTableCell align=\"center\">\n              \n              <Button color={row.color} variant=\"raised\">\n        {row.estatus}\n        </Button>\n      </StyledTableCell>\n              \n            </StyledTableRow>\n          ))}\n        </TableBody>\n      </Table>\n      </Box>\n      </Grid>\n    </TableContainer>\n    \n    );\n}\n \nexport default withRouter(Levantamiento);\n"]},"metadata":{},"sourceType":"module"}